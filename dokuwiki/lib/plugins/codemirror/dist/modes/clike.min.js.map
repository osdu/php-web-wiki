{"version":3,"sources":["../../node_modules/codemirror/mode/clike/clike.js"],"names":["mod","exports","module","require","define","amd","CodeMirror","Context","indented","column","type","info","align","prev","this","pushContext","state","col","indent","context","popContext","t","typeBefore","stream","pos","prevToken","test","string","slice","typeAtEndOfLine","indentation","isTopScope","defineMode","config","parserConfig","indentUnit","statementIndentUnit","dontAlignCalls","keywords","types","builtin","blockKeywords","defKeywords","atoms","hooks","multiLineStrings","indentStatements","indentSwitch","namespaceSeparator","isPunctuationChar","numberStart","number","isOperatorChar","isIdentifierChar","curPunc","isDefKeyword","tokenBase","ch","next","result","tokenize","tokenString","backUp","match","eat","tokenComment","skipToEnd","eatWhile","cur","current","contains","quote","escaped","end","maybeEnd","maybeEOL","typeFirstDefinitions","eol","startState","basecolumn","startOfLine","token","ctx","sol","eatSpace","style","start","undefined","styleDefs","textAfter","Pass","firstChar","charAt","dontIndentStatements","hook","closing","switchBlock","allmanIndentation","electricInput","blockCommentStart","blockCommentEnd","lineComment","fold","words","str","obj","split","i","length","word","propertyIsEnumerable","cKeywords","cTypes","cppHook","peek","pointerHook","_stream","cpp14Literal","cpp11StringHook","cpp11RawStringDelim","tokenRawString","cppLooksLikeConstructor","lastTwo","exec","tokenAtString","delim","replace","RegExp","def","mimes","mode","add","prop","hasOwnProperty","push","helperType","registerHelper","defineMIME","name","#","*","modeProps","u","U","L","R","0","1","2","3","4","5","6","7","8","9","@","tokenTripleString","\"","'","=","cx","closeBrackets","triples","tokenKotlinString","tripleString","skipTo","intendSwitch","_state","stringTokenizer","tokenCeylonString","first","toUpperCase","toLowerCase","`"],"mappings":"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","file":"clike.min.js","sourcesContent":["// CodeMirror, copyright (c) by Marijn Haverbeke and others\n// Distributed under an MIT license: http://codemirror.net/LICENSE\n\n(function(mod) {\n  if (typeof exports == \"object\" && typeof module == \"object\") // CommonJS\n    mod(require(\"../../lib/codemirror\"));\n  else if (typeof define == \"function\" && define.amd) // AMD\n    define([\"../../lib/codemirror\"], mod);\n  else // Plain browser env\n    mod(CodeMirror);\n})(function(CodeMirror) {\n\"use strict\";\n\nfunction Context(indented, column, type, info, align, prev) {\n  this.indented = indented;\n  this.column = column;\n  this.type = type;\n  this.info = info;\n  this.align = align;\n  this.prev = prev;\n}\nfunction pushContext(state, col, type, info) {\n  var indent = state.indented;\n  if (state.context && state.context.type == \"statement\" && type != \"statement\")\n    indent = state.context.indented;\n  return state.context = new Context(indent, col, type, info, null, state.context);\n}\nfunction popContext(state) {\n  var t = state.context.type;\n  if (t == \")\" || t == \"]\" || t == \"}\")\n    state.indented = state.context.indented;\n  return state.context = state.context.prev;\n}\n\nfunction typeBefore(stream, state, pos) {\n  if (state.prevToken == \"variable\" || state.prevToken == \"variable-3\") return true;\n  if (/\\S(?:[^- ]>|[*\\]])\\s*$|\\*$/.test(stream.string.slice(0, pos))) return true;\n  if (state.typeAtEndOfLine && stream.column() == stream.indentation()) return true;\n}\n\nfunction isTopScope(context) {\n  for (;;) {\n    if (!context || context.type == \"top\") return true;\n    if (context.type == \"}\" && context.prev.info != \"namespace\") return false;\n    context = context.prev;\n  }\n}\n\nCodeMirror.defineMode(\"clike\", function(config, parserConfig) {\n  var indentUnit = config.indentUnit,\n      statementIndentUnit = parserConfig.statementIndentUnit || indentUnit,\n      dontAlignCalls = parserConfig.dontAlignCalls,\n      keywords = parserConfig.keywords || {},\n      types = parserConfig.types || {},\n      builtin = parserConfig.builtin || {},\n      blockKeywords = parserConfig.blockKeywords || {},\n      defKeywords = parserConfig.defKeywords || {},\n      atoms = parserConfig.atoms || {},\n      hooks = parserConfig.hooks || {},\n      multiLineStrings = parserConfig.multiLineStrings,\n      indentStatements = parserConfig.indentStatements !== false,\n      indentSwitch = parserConfig.indentSwitch !== false,\n      namespaceSeparator = parserConfig.namespaceSeparator,\n      isPunctuationChar = parserConfig.isPunctuationChar || /[\\[\\]{}\\(\\),;\\:\\.]/,\n      numberStart = parserConfig.numberStart || /[\\d\\.]/,\n      number = parserConfig.number || /^(?:0x[a-f\\d]+|0b[01]+|(?:\\d+\\.?\\d*|\\.\\d+)(?:e[-+]?\\d+)?)(u|ll?|l|f)?/i,\n      isOperatorChar = parserConfig.isOperatorChar || /[+\\-*&%=<>!?|\\/]/,\n      isIdentifierChar = parserConfig.isIdentifierChar || /[\\w\\$_\\xa1-\\uffff]/;\n\n  var curPunc, isDefKeyword;\n\n  function tokenBase(stream, state) {\n    var ch = stream.next();\n    if (hooks[ch]) {\n      var result = hooks[ch](stream, state);\n      if (result !== false) return result;\n    }\n    if (ch == '\"' || ch == \"'\") {\n      state.tokenize = tokenString(ch);\n      return state.tokenize(stream, state);\n    }\n    if (isPunctuationChar.test(ch)) {\n      curPunc = ch;\n      return null;\n    }\n    if (numberStart.test(ch)) {\n      stream.backUp(1)\n      if (stream.match(number)) return \"number\"\n      stream.next()\n    }\n    if (ch == \"/\") {\n      if (stream.eat(\"*\")) {\n        state.tokenize = tokenComment;\n        return tokenComment(stream, state);\n      }\n      if (stream.eat(\"/\")) {\n        stream.skipToEnd();\n        return \"comment\";\n      }\n    }\n    if (isOperatorChar.test(ch)) {\n      while (!stream.match(/^\\/[\\/*]/, false) && stream.eat(isOperatorChar)) {}\n      return \"operator\";\n    }\n    stream.eatWhile(isIdentifierChar);\n    if (namespaceSeparator) while (stream.match(namespaceSeparator))\n      stream.eatWhile(isIdentifierChar);\n\n    var cur = stream.current();\n    if (contains(keywords, cur)) {\n      if (contains(blockKeywords, cur)) curPunc = \"newstatement\";\n      if (contains(defKeywords, cur)) isDefKeyword = true;\n      return \"keyword\";\n    }\n    if (contains(types, cur)) return \"variable-3\";\n    if (contains(builtin, cur)) {\n      if (contains(blockKeywords, cur)) curPunc = \"newstatement\";\n      return \"builtin\";\n    }\n    if (contains(atoms, cur)) return \"atom\";\n    return \"variable\";\n  }\n\n  function tokenString(quote) {\n    return function(stream, state) {\n      var escaped = false, next, end = false;\n      while ((next = stream.next()) != null) {\n        if (next == quote && !escaped) {end = true; break;}\n        escaped = !escaped && next == \"\\\\\";\n      }\n      if (end || !(escaped || multiLineStrings))\n        state.tokenize = null;\n      return \"string\";\n    };\n  }\n\n  function tokenComment(stream, state) {\n    var maybeEnd = false, ch;\n    while (ch = stream.next()) {\n      if (ch == \"/\" && maybeEnd) {\n        state.tokenize = null;\n        break;\n      }\n      maybeEnd = (ch == \"*\");\n    }\n    return \"comment\";\n  }\n\n  function maybeEOL(stream, state) {\n    if (parserConfig.typeFirstDefinitions && stream.eol() && isTopScope(state.context))\n      state.typeAtEndOfLine = typeBefore(stream, state, stream.pos)\n  }\n\n  // Interface\n\n  return {\n    startState: function(basecolumn) {\n      return {\n        tokenize: null,\n        context: new Context((basecolumn || 0) - indentUnit, 0, \"top\", null, false),\n        indented: 0,\n        startOfLine: true,\n        prevToken: null\n      };\n    },\n\n    token: function(stream, state) {\n      var ctx = state.context;\n      if (stream.sol()) {\n        if (ctx.align == null) ctx.align = false;\n        state.indented = stream.indentation();\n        state.startOfLine = true;\n      }\n      if (stream.eatSpace()) { maybeEOL(stream, state); return null; }\n      curPunc = isDefKeyword = null;\n      var style = (state.tokenize || tokenBase)(stream, state);\n      if (style == \"comment\" || style == \"meta\") return style;\n      if (ctx.align == null) ctx.align = true;\n\n      if (curPunc == \";\" || curPunc == \":\" || (curPunc == \",\" && stream.match(/^\\s*(?:\\/\\/.*)?$/, false)))\n        while (state.context.type == \"statement\") popContext(state);\n      else if (curPunc == \"{\") pushContext(state, stream.column(), \"}\");\n      else if (curPunc == \"[\") pushContext(state, stream.column(), \"]\");\n      else if (curPunc == \"(\") pushContext(state, stream.column(), \")\");\n      else if (curPunc == \"}\") {\n        while (ctx.type == \"statement\") ctx = popContext(state);\n        if (ctx.type == \"}\") ctx = popContext(state);\n        while (ctx.type == \"statement\") ctx = popContext(state);\n      }\n      else if (curPunc == ctx.type) popContext(state);\n      else if (indentStatements &&\n               (((ctx.type == \"}\" || ctx.type == \"top\") && curPunc != \";\") ||\n                (ctx.type == \"statement\" && curPunc == \"newstatement\"))) {\n        pushContext(state, stream.column(), \"statement\", stream.current());\n      }\n\n      if (style == \"variable\" &&\n          ((state.prevToken == \"def\" ||\n            (parserConfig.typeFirstDefinitions && typeBefore(stream, state, stream.start) &&\n             isTopScope(state.context) && stream.match(/^\\s*\\(/, false)))))\n        style = \"def\";\n\n      if (hooks.token) {\n        var result = hooks.token(stream, state, style);\n        if (result !== undefined) style = result;\n      }\n\n      if (style == \"def\" && parserConfig.styleDefs === false) style = \"variable\";\n\n      state.startOfLine = false;\n      state.prevToken = isDefKeyword ? \"def\" : style || curPunc;\n      maybeEOL(stream, state);\n      return style;\n    },\n\n    indent: function(state, textAfter) {\n      if (state.tokenize != tokenBase && state.tokenize != null || state.typeAtEndOfLine) return CodeMirror.Pass;\n      var ctx = state.context, firstChar = textAfter && textAfter.charAt(0);\n      if (ctx.type == \"statement\" && firstChar == \"}\") ctx = ctx.prev;\n      if (parserConfig.dontIndentStatements)\n        while (ctx.type == \"statement\" && parserConfig.dontIndentStatements.test(ctx.info))\n          ctx = ctx.prev\n      if (hooks.indent) {\n        var hook = hooks.indent(state, ctx, textAfter);\n        if (typeof hook == \"number\") return hook\n      }\n      var closing = firstChar == ctx.type;\n      var switchBlock = ctx.prev && ctx.prev.info == \"switch\";\n      if (parserConfig.allmanIndentation && /[{(]/.test(firstChar)) {\n        while (ctx.type != \"top\" && ctx.type != \"}\") ctx = ctx.prev\n        return ctx.indented\n      }\n      if (ctx.type == \"statement\")\n        return ctx.indented + (firstChar == \"{\" ? 0 : statementIndentUnit);\n      if (ctx.align && (!dontAlignCalls || ctx.type != \")\"))\n        return ctx.column + (closing ? 0 : 1);\n      if (ctx.type == \")\" && !closing)\n        return ctx.indented + statementIndentUnit;\n\n      return ctx.indented + (closing ? 0 : indentUnit) +\n        (!closing && switchBlock && !/^(?:case|default)\\b/.test(textAfter) ? indentUnit : 0);\n    },\n\n    electricInput: indentSwitch ? /^\\s*(?:case .*?:|default:|\\{\\}?|\\})$/ : /^\\s*[{}]$/,\n    blockCommentStart: \"/*\",\n    blockCommentEnd: \"*/\",\n    lineComment: \"//\",\n    fold: \"brace\"\n  };\n});\n\n  function words(str) {\n    var obj = {}, words = str.split(\" \");\n    for (var i = 0; i < words.length; ++i) obj[words[i]] = true;\n    return obj;\n  }\n  function contains(words, word) {\n    if (typeof words === \"function\") {\n      return words(word);\n    } else {\n      return words.propertyIsEnumerable(word);\n    }\n  }\n  var cKeywords = \"auto if break case register continue return default do sizeof \" +\n    \"static else struct switch extern typedef union for goto while enum const volatile\";\n  var cTypes = \"int long char short double float unsigned signed void size_t ptrdiff_t\";\n\n  function cppHook(stream, state) {\n    if (!state.startOfLine) return false\n    for (var ch, next = null; ch = stream.peek();) {\n      if (ch == \"\\\\\" && stream.match(/^.$/)) {\n        next = cppHook\n        break\n      } else if (ch == \"/\" && stream.match(/^\\/[\\/\\*]/, false)) {\n        break\n      }\n      stream.next()\n    }\n    state.tokenize = next\n    return \"meta\"\n  }\n\n  function pointerHook(_stream, state) {\n    if (state.prevToken == \"variable-3\") return \"variable-3\";\n    return false;\n  }\n\n  function cpp14Literal(stream) {\n    stream.eatWhile(/[\\w\\.']/);\n    return \"number\";\n  }\n\n  function cpp11StringHook(stream, state) {\n    stream.backUp(1);\n    // Raw strings.\n    if (stream.match(/(R|u8R|uR|UR|LR)/)) {\n      var match = stream.match(/\"([^\\s\\\\()]{0,16})\\(/);\n      if (!match) {\n        return false;\n      }\n      state.cpp11RawStringDelim = match[1];\n      state.tokenize = tokenRawString;\n      return tokenRawString(stream, state);\n    }\n    // Unicode strings/chars.\n    if (stream.match(/(u8|u|U|L)/)) {\n      if (stream.match(/[\"']/, /* eat */ false)) {\n        return \"string\";\n      }\n      return false;\n    }\n    // Ignore this hook.\n    stream.next();\n    return false;\n  }\n\n  function cppLooksLikeConstructor(word) {\n    var lastTwo = /(\\w+)::~?(\\w+)$/.exec(word);\n    return lastTwo && lastTwo[1] == lastTwo[2];\n  }\n\n  // C#-style strings where \"\" escapes a quote.\n  function tokenAtString(stream, state) {\n    var next;\n    while ((next = stream.next()) != null) {\n      if (next == '\"' && !stream.eat('\"')) {\n        state.tokenize = null;\n        break;\n      }\n    }\n    return \"string\";\n  }\n\n  // C++11 raw string literal is <prefix>\"<delim>( anything )<delim>\", where\n  // <delim> can be a string up to 16 characters long.\n  function tokenRawString(stream, state) {\n    // Escape characters that have special regex meanings.\n    var delim = state.cpp11RawStringDelim.replace(/[^\\w\\s]/g, '\\\\$&');\n    var match = stream.match(new RegExp(\".*?\\\\)\" + delim + '\"'));\n    if (match)\n      state.tokenize = null;\n    else\n      stream.skipToEnd();\n    return \"string\";\n  }\n\n  function def(mimes, mode) {\n    if (typeof mimes == \"string\") mimes = [mimes];\n    var words = [];\n    function add(obj) {\n      if (obj) for (var prop in obj) if (obj.hasOwnProperty(prop))\n        words.push(prop);\n    }\n    add(mode.keywords);\n    add(mode.types);\n    add(mode.builtin);\n    add(mode.atoms);\n    if (words.length) {\n      mode.helperType = mimes[0];\n      CodeMirror.registerHelper(\"hintWords\", mimes[0], words);\n    }\n\n    for (var i = 0; i < mimes.length; ++i)\n      CodeMirror.defineMIME(mimes[i], mode);\n  }\n\n  def([\"text/x-csrc\", \"text/x-c\", \"text/x-chdr\"], {\n    name: \"clike\",\n    keywords: words(cKeywords),\n    types: words(cTypes + \" bool _Complex _Bool float_t double_t intptr_t intmax_t \" +\n                 \"int8_t int16_t int32_t int64_t uintptr_t uintmax_t uint8_t uint16_t \" +\n                 \"uint32_t uint64_t\"),\n    blockKeywords: words(\"case do else for if switch while struct\"),\n    defKeywords: words(\"struct\"),\n    typeFirstDefinitions: true,\n    atoms: words(\"null true false\"),\n    hooks: {\"#\": cppHook, \"*\": pointerHook},\n    modeProps: {fold: [\"brace\", \"include\"]}\n  });\n\n  def([\"text/x-c++src\", \"text/x-c++hdr\"], {\n    name: \"clike\",\n    keywords: words(cKeywords + \" asm dynamic_cast namespace reinterpret_cast try explicit new \" +\n                    \"static_cast typeid catch operator template typename class friend private \" +\n                    \"this using const_cast inline public throw virtual delete mutable protected \" +\n                    \"alignas alignof constexpr decltype nullptr noexcept thread_local final \" +\n                    \"static_assert override\"),\n    types: words(cTypes + \" bool wchar_t\"),\n    blockKeywords: words(\"catch class do else finally for if struct switch try while\"),\n    defKeywords: words(\"class namespace struct enum union\"),\n    typeFirstDefinitions: true,\n    atoms: words(\"true false null\"),\n    dontIndentStatements: /^template$/,\n    isIdentifierChar: /[\\w\\$_~\\xa1-\\uffff]/,\n    hooks: {\n      \"#\": cppHook,\n      \"*\": pointerHook,\n      \"u\": cpp11StringHook,\n      \"U\": cpp11StringHook,\n      \"L\": cpp11StringHook,\n      \"R\": cpp11StringHook,\n      \"0\": cpp14Literal,\n      \"1\": cpp14Literal,\n      \"2\": cpp14Literal,\n      \"3\": cpp14Literal,\n      \"4\": cpp14Literal,\n      \"5\": cpp14Literal,\n      \"6\": cpp14Literal,\n      \"7\": cpp14Literal,\n      \"8\": cpp14Literal,\n      \"9\": cpp14Literal,\n      token: function(stream, state, style) {\n        if (style == \"variable\" && stream.peek() == \"(\" &&\n            (state.prevToken == \";\" || state.prevToken == null ||\n             state.prevToken == \"}\") &&\n            cppLooksLikeConstructor(stream.current()))\n          return \"def\";\n      }\n    },\n    namespaceSeparator: \"::\",\n    modeProps: {fold: [\"brace\", \"include\"]}\n  });\n\n  def(\"text/x-java\", {\n    name: \"clike\",\n    keywords: words(\"abstract assert break case catch class const continue default \" +\n                    \"do else enum extends final finally float for goto if implements import \" +\n                    \"instanceof interface native new package private protected public \" +\n                    \"return static strictfp super switch synchronized this throw throws transient \" +\n                    \"try volatile while @interface\"),\n    types: words(\"byte short int long float double boolean char void Boolean Byte Character Double Float \" +\n                 \"Integer Long Number Object Short String StringBuffer StringBuilder Void\"),\n    blockKeywords: words(\"catch class do else finally for if switch try while\"),\n    defKeywords: words(\"class interface package enum @interface\"),\n    typeFirstDefinitions: true,\n    atoms: words(\"true false null\"),\n    number: /^(?:0x[a-f\\d_]+|0b[01_]+|(?:[\\d_]+\\.?\\d*|\\.\\d+)(?:e[-+]?[\\d_]+)?)(u|ll?|l|f)?/i,\n    hooks: {\n      \"@\": function(stream) {\n        // Don't match the @interface keyword.\n        if (stream.match('interface', false)) return false;\n\n        stream.eatWhile(/[\\w\\$_]/);\n        return \"meta\";\n      }\n    },\n    modeProps: {fold: [\"brace\", \"import\"]}\n  });\n\n  def(\"text/x-csharp\", {\n    name: \"clike\",\n    keywords: words(\"abstract as async await base break case catch checked class const continue\" +\n                    \" default delegate do else enum event explicit extern finally fixed for\" +\n                    \" foreach goto if implicit in interface internal is lock namespace new\" +\n                    \" operator out override params private protected public readonly ref return sealed\" +\n                    \" sizeof stackalloc static struct switch this throw try typeof unchecked\" +\n                    \" unsafe using virtual void volatile while add alias ascending descending dynamic from get\" +\n                    \" global group into join let orderby partial remove select set value var yield\"),\n    types: words(\"Action Boolean Byte Char DateTime DateTimeOffset Decimal Double Func\" +\n                 \" Guid Int16 Int32 Int64 Object SByte Single String Task TimeSpan UInt16 UInt32\" +\n                 \" UInt64 bool byte char decimal double short int long object\"  +\n                 \" sbyte float string ushort uint ulong\"),\n    blockKeywords: words(\"catch class do else finally for foreach if struct switch try while\"),\n    defKeywords: words(\"class interface namespace struct var\"),\n    typeFirstDefinitions: true,\n    atoms: words(\"true false null\"),\n    hooks: {\n      \"@\": function(stream, state) {\n        if (stream.eat('\"')) {\n          state.tokenize = tokenAtString;\n          return tokenAtString(stream, state);\n        }\n        stream.eatWhile(/[\\w\\$_]/);\n        return \"meta\";\n      }\n    }\n  });\n\n  function tokenTripleString(stream, state) {\n    var escaped = false;\n    while (!stream.eol()) {\n      if (!escaped && stream.match('\"\"\"')) {\n        state.tokenize = null;\n        break;\n      }\n      escaped = stream.next() == \"\\\\\" && !escaped;\n    }\n    return \"string\";\n  }\n\n  def(\"text/x-scala\", {\n    name: \"clike\",\n    keywords: words(\n\n      /* scala */\n      \"abstract case catch class def do else extends final finally for forSome if \" +\n      \"implicit import lazy match new null object override package private protected return \" +\n      \"sealed super this throw trait try type val var while with yield _ \" +\n\n      /* package scala */\n      \"assert assume require print println printf readLine readBoolean readByte readShort \" +\n      \"readChar readInt readLong readFloat readDouble\"\n    ),\n    types: words(\n      \"AnyVal App Application Array BufferedIterator BigDecimal BigInt Char Console Either \" +\n      \"Enumeration Equiv Error Exception Fractional Function IndexedSeq Int Integral Iterable \" +\n      \"Iterator List Map Numeric Nil NotNull Option Ordered Ordering PartialFunction PartialOrdering \" +\n      \"Product Proxy Range Responder Seq Serializable Set Specializable Stream StringBuilder \" +\n      \"StringContext Symbol Throwable Traversable TraversableOnce Tuple Unit Vector \" +\n\n      /* package java.lang */\n      \"Boolean Byte Character CharSequence Class ClassLoader Cloneable Comparable \" +\n      \"Compiler Double Exception Float Integer Long Math Number Object Package Pair Process \" +\n      \"Runtime Runnable SecurityManager Short StackTraceElement StrictMath String \" +\n      \"StringBuffer System Thread ThreadGroup ThreadLocal Throwable Triple Void\"\n    ),\n    multiLineStrings: true,\n    blockKeywords: words(\"catch class do else finally for forSome if match switch try while\"),\n    defKeywords: words(\"class def object package trait type val var\"),\n    atoms: words(\"true false null\"),\n    indentStatements: false,\n    indentSwitch: false,\n    isOperatorChar: /[+\\-*&%=<>!?|\\/#:@]/,\n    hooks: {\n      \"@\": function(stream) {\n        stream.eatWhile(/[\\w\\$_]/);\n        return \"meta\";\n      },\n      '\"': function(stream, state) {\n        if (!stream.match('\"\"')) return false;\n        state.tokenize = tokenTripleString;\n        return state.tokenize(stream, state);\n      },\n      \"'\": function(stream) {\n        stream.eatWhile(/[\\w\\$_\\xa1-\\uffff]/);\n        return \"atom\";\n      },\n      \"=\": function(stream, state) {\n        var cx = state.context\n        if (cx.type == \"}\" && cx.align && stream.eat(\">\")) {\n          state.context = new Context(cx.indented, cx.column, cx.type, cx.info, null, cx.prev)\n          return \"operator\"\n        } else {\n          return false\n        }\n      }\n    },\n    modeProps: {closeBrackets: {triples: '\"'}}\n  });\n\n  function tokenKotlinString(tripleString){\n    return function (stream, state) {\n      var escaped = false, next, end = false;\n      while (!stream.eol()) {\n        if (!tripleString && !escaped && stream.match('\"') ) {end = true; break;}\n        if (tripleString && stream.match('\"\"\"')) {end = true; break;}\n        next = stream.next();\n        if(!escaped && next == \"$\" && stream.match('{'))\n          stream.skipTo(\"}\");\n        escaped = !escaped && next == \"\\\\\" && !tripleString;\n      }\n      if (end || !tripleString)\n        state.tokenize = null;\n      return \"string\";\n    }\n  }\n\n  def(\"text/x-kotlin\", {\n    name: \"clike\",\n    keywords: words(\n      /*keywords*/\n      \"package as typealias class interface this super val \" +\n      \"var fun for is in This throw return \" +\n      \"break continue object if else while do try when !in !is as? \" +\n\n      /*soft keywords*/\n      \"file import where by get set abstract enum open inner override private public internal \" +\n      \"protected catch finally out final vararg reified dynamic companion constructor init \" +\n      \"sealed field property receiver param sparam lateinit data inline noinline tailrec \" +\n      \"external annotation crossinline const operator infix suspend\"\n    ),\n    types: words(\n      /* package java.lang */\n      \"Boolean Byte Character CharSequence Class ClassLoader Cloneable Comparable \" +\n      \"Compiler Double Exception Float Integer Long Math Number Object Package Pair Process \" +\n      \"Runtime Runnable SecurityManager Short StackTraceElement StrictMath String \" +\n      \"StringBuffer System Thread ThreadGroup ThreadLocal Throwable Triple Void\"\n    ),\n    intendSwitch: false,\n    indentStatements: false,\n    multiLineStrings: true,\n    number: /^(?:0x[a-f\\d_]+|0b[01_]+|(?:[\\d_]+\\.?\\d*|\\.\\d+)(?:e[-+]?[\\d_]+)?)(u|ll?|l|f)?/i,\n    blockKeywords: words(\"catch class do else finally for if where try while enum\"),\n    defKeywords: words(\"class val var object package interface fun\"),\n    atoms: words(\"true false null this\"),\n    hooks: {\n      '\"': function(stream, state) {\n        state.tokenize = tokenKotlinString(stream.match('\"\"'));\n        return state.tokenize(stream, state);\n      }\n    },\n    modeProps: {closeBrackets: {triples: '\"'}}\n  });\n\n  def([\"x-shader/x-vertex\", \"x-shader/x-fragment\"], {\n    name: \"clike\",\n    keywords: words(\"sampler1D sampler2D sampler3D samplerCube \" +\n                    \"sampler1DShadow sampler2DShadow \" +\n                    \"const attribute uniform varying \" +\n                    \"break continue discard return \" +\n                    \"for while do if else struct \" +\n                    \"in out inout\"),\n    types: words(\"float int bool void \" +\n                 \"vec2 vec3 vec4 ivec2 ivec3 ivec4 bvec2 bvec3 bvec4 \" +\n                 \"mat2 mat3 mat4\"),\n    blockKeywords: words(\"for while do if else struct\"),\n    builtin: words(\"radians degrees sin cos tan asin acos atan \" +\n                    \"pow exp log exp2 sqrt inversesqrt \" +\n                    \"abs sign floor ceil fract mod min max clamp mix step smoothstep \" +\n                    \"length distance dot cross normalize ftransform faceforward \" +\n                    \"reflect refract matrixCompMult \" +\n                    \"lessThan lessThanEqual greaterThan greaterThanEqual \" +\n                    \"equal notEqual any all not \" +\n                    \"texture1D texture1DProj texture1DLod texture1DProjLod \" +\n                    \"texture2D texture2DProj texture2DLod texture2DProjLod \" +\n                    \"texture3D texture3DProj texture3DLod texture3DProjLod \" +\n                    \"textureCube textureCubeLod \" +\n                    \"shadow1D shadow2D shadow1DProj shadow2DProj \" +\n                    \"shadow1DLod shadow2DLod shadow1DProjLod shadow2DProjLod \" +\n                    \"dFdx dFdy fwidth \" +\n                    \"noise1 noise2 noise3 noise4\"),\n    atoms: words(\"true false \" +\n                \"gl_FragColor gl_SecondaryColor gl_Normal gl_Vertex \" +\n                \"gl_MultiTexCoord0 gl_MultiTexCoord1 gl_MultiTexCoord2 gl_MultiTexCoord3 \" +\n                \"gl_MultiTexCoord4 gl_MultiTexCoord5 gl_MultiTexCoord6 gl_MultiTexCoord7 \" +\n                \"gl_FogCoord gl_PointCoord \" +\n                \"gl_Position gl_PointSize gl_ClipVertex \" +\n                \"gl_FrontColor gl_BackColor gl_FrontSecondaryColor gl_BackSecondaryColor \" +\n                \"gl_TexCoord gl_FogFragCoord \" +\n                \"gl_FragCoord gl_FrontFacing \" +\n                \"gl_FragData gl_FragDepth \" +\n                \"gl_ModelViewMatrix gl_ProjectionMatrix gl_ModelViewProjectionMatrix \" +\n                \"gl_TextureMatrix gl_NormalMatrix gl_ModelViewMatrixInverse \" +\n                \"gl_ProjectionMatrixInverse gl_ModelViewProjectionMatrixInverse \" +\n                \"gl_TexureMatrixTranspose gl_ModelViewMatrixInverseTranspose \" +\n                \"gl_ProjectionMatrixInverseTranspose \" +\n                \"gl_ModelViewProjectionMatrixInverseTranspose \" +\n                \"gl_TextureMatrixInverseTranspose \" +\n                \"gl_NormalScale gl_DepthRange gl_ClipPlane \" +\n                \"gl_Point gl_FrontMaterial gl_BackMaterial gl_LightSource gl_LightModel \" +\n                \"gl_FrontLightModelProduct gl_BackLightModelProduct \" +\n                \"gl_TextureColor gl_EyePlaneS gl_EyePlaneT gl_EyePlaneR gl_EyePlaneQ \" +\n                \"gl_FogParameters \" +\n                \"gl_MaxLights gl_MaxClipPlanes gl_MaxTextureUnits gl_MaxTextureCoords \" +\n                \"gl_MaxVertexAttribs gl_MaxVertexUniformComponents gl_MaxVaryingFloats \" +\n                \"gl_MaxVertexTextureImageUnits gl_MaxTextureImageUnits \" +\n                \"gl_MaxFragmentUniformComponents gl_MaxCombineTextureImageUnits \" +\n                \"gl_MaxDrawBuffers\"),\n    indentSwitch: false,\n    hooks: {\"#\": cppHook},\n    modeProps: {fold: [\"brace\", \"include\"]}\n  });\n\n  def(\"text/x-nesc\", {\n    name: \"clike\",\n    keywords: words(cKeywords + \"as atomic async call command component components configuration event generic \" +\n                    \"implementation includes interface module new norace nx_struct nx_union post provides \" +\n                    \"signal task uses abstract extends\"),\n    types: words(cTypes),\n    blockKeywords: words(\"case do else for if switch while struct\"),\n    atoms: words(\"null true false\"),\n    hooks: {\"#\": cppHook},\n    modeProps: {fold: [\"brace\", \"include\"]}\n  });\n\n  def(\"text/x-objectivec\", {\n    name: \"clike\",\n    keywords: words(cKeywords + \"inline restrict _Bool _Complex _Imaginary BOOL Class bycopy byref id IMP in \" +\n                    \"inout nil oneway out Protocol SEL self super atomic nonatomic retain copy readwrite readonly\"),\n    types: words(cTypes),\n    atoms: words(\"YES NO NULL NILL ON OFF true false\"),\n    hooks: {\n      \"@\": function(stream) {\n        stream.eatWhile(/[\\w\\$]/);\n        return \"keyword\";\n      },\n      \"#\": cppHook,\n      indent: function(_state, ctx, textAfter) {\n        if (ctx.type == \"statement\" && /^@\\w/.test(textAfter)) return ctx.indented\n      }\n    },\n    modeProps: {fold: \"brace\"}\n  });\n\n  def(\"text/x-squirrel\", {\n    name: \"clike\",\n    keywords: words(\"base break clone continue const default delete enum extends function in class\" +\n                    \" foreach local resume return this throw typeof yield constructor instanceof static\"),\n    types: words(cTypes),\n    blockKeywords: words(\"case catch class else for foreach if switch try while\"),\n    defKeywords: words(\"function local class\"),\n    typeFirstDefinitions: true,\n    atoms: words(\"true false null\"),\n    hooks: {\"#\": cppHook},\n    modeProps: {fold: [\"brace\", \"include\"]}\n  });\n\n  // Ceylon Strings need to deal with interpolation\n  var stringTokenizer = null;\n  function tokenCeylonString(type) {\n    return function(stream, state) {\n      var escaped = false, next, end = false;\n      while (!stream.eol()) {\n        if (!escaped && stream.match('\"') &&\n              (type == \"single\" || stream.match('\"\"'))) {\n          end = true;\n          break;\n        }\n        if (!escaped && stream.match('``')) {\n          stringTokenizer = tokenCeylonString(type);\n          end = true;\n          break;\n        }\n        next = stream.next();\n        escaped = type == \"single\" && !escaped && next == \"\\\\\";\n      }\n      if (end)\n          state.tokenize = null;\n      return \"string\";\n    }\n  }\n\n  def(\"text/x-ceylon\", {\n    name: \"clike\",\n    keywords: words(\"abstracts alias assembly assert assign break case catch class continue dynamic else\" +\n                    \" exists extends finally for function given if import in interface is let module new\" +\n                    \" nonempty object of out outer package return satisfies super switch then this throw\" +\n                    \" try value void while\"),\n    types: function(word) {\n        // In Ceylon all identifiers that start with an uppercase are types\n        var first = word.charAt(0);\n        return (first === first.toUpperCase() && first !== first.toLowerCase());\n    },\n    blockKeywords: words(\"case catch class dynamic else finally for function if interface module new object switch try while\"),\n    defKeywords: words(\"class dynamic function interface module object package value\"),\n    builtin: words(\"abstract actual aliased annotation by default deprecated doc final formal late license\" +\n                   \" native optional sealed see serializable shared suppressWarnings tagged throws variable\"),\n    isPunctuationChar: /[\\[\\]{}\\(\\),;\\:\\.`]/,\n    isOperatorChar: /[+\\-*&%=<>!?|^~:\\/]/,\n    numberStart: /[\\d#$]/,\n    number: /^(?:#[\\da-fA-F_]+|\\$[01_]+|[\\d_]+[kMGTPmunpf]?|[\\d_]+\\.[\\d_]+(?:[eE][-+]?\\d+|[kMGTPmunpf]|)|)/i,\n    multiLineStrings: true,\n    typeFirstDefinitions: true,\n    atoms: words(\"true false null larger smaller equal empty finished\"),\n    indentSwitch: false,\n    styleDefs: false,\n    hooks: {\n      \"@\": function(stream) {\n        stream.eatWhile(/[\\w\\$_]/);\n        return \"meta\";\n      },\n      '\"': function(stream, state) {\n          state.tokenize = tokenCeylonString(stream.match('\"\"') ? \"triple\" : \"single\");\n          return state.tokenize(stream, state);\n        },\n      '`': function(stream, state) {\n          if (!stringTokenizer || !stream.match('`')) return false;\n          state.tokenize = stringTokenizer;\n          stringTokenizer = null;\n          return state.tokenize(stream, state);\n        },\n      \"'\": function(stream) {\n        stream.eatWhile(/[\\w\\$_\\xa1-\\uffff]/);\n        return \"atom\";\n      },\n      token: function(_stream, state, style) {\n          if ((style == \"variable\" || style == \"variable-3\") &&\n              state.prevToken == \".\") {\n            return \"variable-2\";\n          }\n        }\n    },\n    modeProps: {\n        fold: [\"brace\", \"import\"],\n        closeBrackets: {triples: '\"'}\n    }\n  });\n\n});\n"]}