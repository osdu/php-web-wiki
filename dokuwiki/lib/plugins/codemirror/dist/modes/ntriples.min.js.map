{"version":3,"sources":["../../node_modules/codemirror/mode/ntriples/ntriples.js"],"names":["mod","exports","module","require","define","amd","CodeMirror","defineMode","Location","PRE_SUBJECT","WRITING_SUB_URI","WRITING_BNODE_URI","PRE_PRED","WRITING_PRED_URI","PRE_OBJ","WRITING_OBJ_URI","WRITING_OBJ_BNODE","WRITING_OBJ_LITERAL","WRITING_LIT_LANG","WRITING_LIT_TYPE","POST_OBJ","ERROR","transitState","currState","c","currLocation","location","ret","startState","uris","anchors","bnodes","langs","types","token","stream","state","ch","next","parsedURI","eatWhile","push","match","parsedAnchor","parsedBNode","peek","parsedLang","parsedType","defineMIME"],"mappings":"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","file":"ntriples.min.js","sourcesContent":["// CodeMirror, copyright (c) by Marijn Haverbeke and others\n// Distributed under an MIT license: http://codemirror.net/LICENSE\n\n/**********************************************************\n* This script provides syntax highlighting support for\n* the Ntriples format.\n* Ntriples format specification:\n*     http://www.w3.org/TR/rdf-testcases/#ntriples\n***********************************************************/\n\n/*\n    The following expression defines the defined ASF grammar transitions.\n\n    pre_subject ->\n        {\n        ( writing_subject_uri | writing_bnode_uri )\n            -> pre_predicate\n                -> writing_predicate_uri\n                    -> pre_object\n                        -> writing_object_uri | writing_object_bnode |\n                          (\n                            writing_object_literal\n                                -> writing_literal_lang | writing_literal_type\n                          )\n                            -> post_object\n                                -> BEGIN\n         } otherwise {\n             -> ERROR\n         }\n*/\n\n(function(mod) {\n  if (typeof exports == \"object\" && typeof module == \"object\") // CommonJS\n    mod(require(\"../../lib/codemirror\"));\n  else if (typeof define == \"function\" && define.amd) // AMD\n    define([\"../../lib/codemirror\"], mod);\n  else // Plain browser env\n    mod(CodeMirror);\n})(function(CodeMirror) {\n\"use strict\";\n\nCodeMirror.defineMode(\"ntriples\", function() {\n\n  var Location = {\n    PRE_SUBJECT         : 0,\n    WRITING_SUB_URI     : 1,\n    WRITING_BNODE_URI   : 2,\n    PRE_PRED            : 3,\n    WRITING_PRED_URI    : 4,\n    PRE_OBJ             : 5,\n    WRITING_OBJ_URI     : 6,\n    WRITING_OBJ_BNODE   : 7,\n    WRITING_OBJ_LITERAL : 8,\n    WRITING_LIT_LANG    : 9,\n    WRITING_LIT_TYPE    : 10,\n    POST_OBJ            : 11,\n    ERROR               : 12\n  };\n  function transitState(currState, c) {\n    var currLocation = currState.location;\n    var ret;\n\n    // Opening.\n    if     (currLocation == Location.PRE_SUBJECT && c == '<') ret = Location.WRITING_SUB_URI;\n    else if(currLocation == Location.PRE_SUBJECT && c == '_') ret = Location.WRITING_BNODE_URI;\n    else if(currLocation == Location.PRE_PRED    && c == '<') ret = Location.WRITING_PRED_URI;\n    else if(currLocation == Location.PRE_OBJ     && c == '<') ret = Location.WRITING_OBJ_URI;\n    else if(currLocation == Location.PRE_OBJ     && c == '_') ret = Location.WRITING_OBJ_BNODE;\n    else if(currLocation == Location.PRE_OBJ     && c == '\"') ret = Location.WRITING_OBJ_LITERAL;\n\n    // Closing.\n    else if(currLocation == Location.WRITING_SUB_URI     && c == '>') ret = Location.PRE_PRED;\n    else if(currLocation == Location.WRITING_BNODE_URI   && c == ' ') ret = Location.PRE_PRED;\n    else if(currLocation == Location.WRITING_PRED_URI    && c == '>') ret = Location.PRE_OBJ;\n    else if(currLocation == Location.WRITING_OBJ_URI     && c == '>') ret = Location.POST_OBJ;\n    else if(currLocation == Location.WRITING_OBJ_BNODE   && c == ' ') ret = Location.POST_OBJ;\n    else if(currLocation == Location.WRITING_OBJ_LITERAL && c == '\"') ret = Location.POST_OBJ;\n    else if(currLocation == Location.WRITING_LIT_LANG && c == ' ') ret = Location.POST_OBJ;\n    else if(currLocation == Location.WRITING_LIT_TYPE && c == '>') ret = Location.POST_OBJ;\n\n    // Closing typed and language literal.\n    else if(currLocation == Location.WRITING_OBJ_LITERAL && c == '@') ret = Location.WRITING_LIT_LANG;\n    else if(currLocation == Location.WRITING_OBJ_LITERAL && c == '^') ret = Location.WRITING_LIT_TYPE;\n\n    // Spaces.\n    else if( c == ' ' &&\n             (\n               currLocation == Location.PRE_SUBJECT ||\n               currLocation == Location.PRE_PRED    ||\n               currLocation == Location.PRE_OBJ     ||\n               currLocation == Location.POST_OBJ\n             )\n           ) ret = currLocation;\n\n    // Reset.\n    else if(currLocation == Location.POST_OBJ && c == '.') ret = Location.PRE_SUBJECT;\n\n    // Error\n    else ret = Location.ERROR;\n\n    currState.location=ret;\n  }\n\n  return {\n    startState: function() {\n       return {\n           location : Location.PRE_SUBJECT,\n           uris     : [],\n           anchors  : [],\n           bnodes   : [],\n           langs    : [],\n           types    : []\n       };\n    },\n    token: function(stream, state) {\n      var ch = stream.next();\n      if(ch == '<') {\n         transitState(state, ch);\n         var parsedURI = '';\n         stream.eatWhile( function(c) { if( c != '#' && c != '>' ) { parsedURI += c; return true; } return false;} );\n         state.uris.push(parsedURI);\n         if( stream.match('#', false) ) return 'variable';\n         stream.next();\n         transitState(state, '>');\n         return 'variable';\n      }\n      if(ch == '#') {\n        var parsedAnchor = '';\n        stream.eatWhile(function(c) { if(c != '>' && c != ' ') { parsedAnchor+= c; return true; } return false;});\n        state.anchors.push(parsedAnchor);\n        return 'variable-2';\n      }\n      if(ch == '>') {\n          transitState(state, '>');\n          return 'variable';\n      }\n      if(ch == '_') {\n          transitState(state, ch);\n          var parsedBNode = '';\n          stream.eatWhile(function(c) { if( c != ' ' ) { parsedBNode += c; return true; } return false;});\n          state.bnodes.push(parsedBNode);\n          stream.next();\n          transitState(state, ' ');\n          return 'builtin';\n      }\n      if(ch == '\"') {\n          transitState(state, ch);\n          stream.eatWhile( function(c) { return c != '\"'; } );\n          stream.next();\n          if( stream.peek() != '@' && stream.peek() != '^' ) {\n              transitState(state, '\"');\n          }\n          return 'string';\n      }\n      if( ch == '@' ) {\n          transitState(state, '@');\n          var parsedLang = '';\n          stream.eatWhile(function(c) { if( c != ' ' ) { parsedLang += c; return true; } return false;});\n          state.langs.push(parsedLang);\n          stream.next();\n          transitState(state, ' ');\n          return 'string-2';\n      }\n      if( ch == '^' ) {\n          stream.next();\n          transitState(state, '^');\n          var parsedType = '';\n          stream.eatWhile(function(c) { if( c != '>' ) { parsedType += c; return true; } return false;} );\n          state.types.push(parsedType);\n          stream.next();\n          transitState(state, '>');\n          return 'variable';\n      }\n      if( ch == ' ' ) {\n          transitState(state, ch);\n      }\n      if( ch == '.' ) {\n          transitState(state, ch);\n      }\n    }\n  };\n});\n\nCodeMirror.defineMIME(\"text/n-triples\", \"ntriples\");\n\n});\n"]}