{"version":3,"sources":["../../node_modules/codemirror/mode/markdown/markdown.js"],"names":["mod","exports","module","require","define","amd","CodeMirror","defineMode","cmCfg","modeCfg","htmlMode","getMode","htmlModeMissing","name","findModeByName","found","mime","mimes","mode","highlightFormatting","undefined","maxBlockquoteDepth","taskLists","strikethrough","tokenTypeOverrides","tokenTypes","header","code","quote","list1","list2","list3","hr","image","imageAltText","imageMarker","formatting","linkInline","linkEmail","linkText","linkHref","em","strong","tokenType","hasOwnProperty","hrRE","listRE","taskListRE","atxHeaderRE","allowAtxHeaderWithoutSpace","setextHeaderRE","textRE","fencedCodeRE","RegExp","fencedCodeBlocks","punctuation","switchInline","stream","state","f","inline","switchBlock","block","lineIsEmpty","line","test","string","blankLine","linkTitle","indentedCode","htmlBlock","inlineNormal","blockNormal","trailingSpace","trailingSpaceNewLine","prevLine","thisLine","sol","prevLineIsList","list","prevLineIsIndentedCode","indentationDiff","indentation","match","skipToEnd","eatSpace","length","getType","charAt","eat","peek","footnoteLink","listType","column","current","listStack","pop","push","taskList","fencedChars","localMode","localState","startState","local","style","token","htmlState","inner","innerMode","tagStart","context","tokenize","isInText","md_inside","indexOf","returnType","skipTo","styles","i","taskOpen","join","taskClosed","listMod","handleText","text","ch","next","matchCh","replace","regex","previousFormatting","eatWhile","count","t","type","formattingEscape","end","pos","atts","substring","start","backUp","len","before","after","leftFlanking","rightFlanking","setEm","setStrong","getLinkHrefInside","linkRE",")","]","endChar","returnState","footnoteLinkInside","footnoteUrl","copyState","s","slice","forceBlankLine","Math","min","closeBrackets","fold","defineMIME"],"mappings":"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","file":"markdown.min.js","sourcesContent":["// CodeMirror, copyright (c) by Marijn Haverbeke and others\n// Distributed under an MIT license: http://codemirror.net/LICENSE\n\n(function(mod) {\n  if (typeof exports == \"object\" && typeof module == \"object\") // CommonJS\n    mod(require(\"../../lib/codemirror\"), require(\"../xml/xml\"), require(\"../meta\"));\n  else if (typeof define == \"function\" && define.amd) // AMD\n    define([\"../../lib/codemirror\", \"../xml/xml\", \"../meta\"], mod);\n  else // Plain browser env\n    mod(CodeMirror);\n})(function(CodeMirror) {\n\"use strict\";\n\nCodeMirror.defineMode(\"markdown\", function(cmCfg, modeCfg) {\n\n  var htmlMode = CodeMirror.getMode(cmCfg, \"text/html\");\n  var htmlModeMissing = htmlMode.name == \"null\"\n\n  function getMode(name) {\n    if (CodeMirror.findModeByName) {\n      var found = CodeMirror.findModeByName(name);\n      if (found) name = found.mime || found.mimes[0];\n    }\n    var mode = CodeMirror.getMode(cmCfg, name);\n    return mode.name == \"null\" ? null : mode;\n  }\n\n  // Should characters that affect highlighting be highlighted separate?\n  // Does not include characters that will be output (such as `1.` and `-` for lists)\n  if (modeCfg.highlightFormatting === undefined)\n    modeCfg.highlightFormatting = false;\n\n  // Maximum number of nested blockquotes. Set to 0 for infinite nesting.\n  // Excess `>` will emit `error` token.\n  if (modeCfg.maxBlockquoteDepth === undefined)\n    modeCfg.maxBlockquoteDepth = 0;\n\n  // Use `fencedCodeBlocks` to configure fenced code blocks. false to\n  // disable, string to specify a precise regexp that the fence should\n  // match, and true to allow three or more backticks or tildes (as\n  // per CommonMark).\n\n  // Turn on task lists? (\"- [ ] \" and \"- [x] \")\n  if (modeCfg.taskLists === undefined) modeCfg.taskLists = false;\n\n  // Turn on strikethrough syntax\n  if (modeCfg.strikethrough === undefined)\n    modeCfg.strikethrough = false;\n\n  // Allow token types to be overridden by user-provided token types.\n  if (modeCfg.tokenTypeOverrides === undefined)\n    modeCfg.tokenTypeOverrides = {};\n\n  var tokenTypes = {\n    header: \"header\",\n    code: \"comment\",\n    quote: \"quote\",\n    list1: \"variable-2\",\n    list2: \"variable-3\",\n    list3: \"keyword\",\n    hr: \"hr\",\n    image: \"image\",\n    imageAltText: \"image-alt-text\",\n    imageMarker: \"image-marker\",\n    formatting: \"formatting\",\n    linkInline: \"link\",\n    linkEmail: \"link\",\n    linkText: \"link\",\n    linkHref: \"string\",\n    em: \"em\",\n    strong: \"strong\",\n    strikethrough: \"strikethrough\"\n  };\n\n  for (var tokenType in tokenTypes) {\n    if (tokenTypes.hasOwnProperty(tokenType) && modeCfg.tokenTypeOverrides[tokenType]) {\n      tokenTypes[tokenType] = modeCfg.tokenTypeOverrides[tokenType];\n    }\n  }\n\n  var hrRE = /^([*\\-_])(?:\\s*\\1){2,}\\s*$/\n  ,   listRE = /^(?:[*\\-+]|^[0-9]+([.)]))\\s+/\n  ,   taskListRE = /^\\[(x| )\\](?=\\s)/ // Must follow listRE\n  ,   atxHeaderRE = modeCfg.allowAtxHeaderWithoutSpace ? /^(#+)/ : /^(#+)(?: |$)/\n  ,   setextHeaderRE = /^ *(?:\\={1,}|-{1,})\\s*$/\n  ,   textRE = /^[^#!\\[\\]*_\\\\<>` \"'(~]+/\n  ,   fencedCodeRE = new RegExp(\"^(\" + (modeCfg.fencedCodeBlocks === true ? \"~~~+|```+\" : modeCfg.fencedCodeBlocks) +\n                                \")[ \\\\t]*([\\\\w+#\\-]*)\")\n  ,   punctuation = /[!\\\"#$%&\\'()*+,\\-\\.\\/:;<=>?@\\[\\\\\\]^_`{|}~—]/\n\n  function switchInline(stream, state, f) {\n    state.f = state.inline = f;\n    return f(stream, state);\n  }\n\n  function switchBlock(stream, state, f) {\n    state.f = state.block = f;\n    return f(stream, state);\n  }\n\n  function lineIsEmpty(line) {\n    return !line || !/\\S/.test(line.string)\n  }\n\n  // Blocks\n\n  function blankLine(state) {\n    // Reset linkTitle state\n    state.linkTitle = false;\n    // Reset EM state\n    state.em = false;\n    // Reset STRONG state\n    state.strong = false;\n    // Reset strikethrough state\n    state.strikethrough = false;\n    // Reset state.quote\n    state.quote = 0;\n    // Reset state.indentedCode\n    state.indentedCode = false;\n    if (state.f == htmlBlock) {\n      state.f = inlineNormal;\n      state.block = blockNormal;\n    }\n    // Reset state.trailingSpace\n    state.trailingSpace = 0;\n    state.trailingSpaceNewLine = false;\n    // Mark this line as blank\n    state.prevLine = state.thisLine\n    state.thisLine = null\n    return null;\n  }\n\n  function blockNormal(stream, state) {\n\n    var sol = stream.sol();\n\n    var prevLineIsList = state.list !== false,\n        prevLineIsIndentedCode = state.indentedCode;\n\n    state.indentedCode = false;\n\n    if (prevLineIsList) {\n      if (state.indentationDiff >= 0) { // Continued list\n        if (state.indentationDiff < 4) { // Only adjust indentation if *not* a code block\n          state.indentation -= state.indentationDiff;\n        }\n        state.list = null;\n      } else if (state.indentation > 0) {\n        state.list = null;\n      } else { // No longer a list\n        state.list = false;\n      }\n    }\n\n    var match = null;\n    if (state.indentationDiff >= 4) {\n      stream.skipToEnd();\n      if (prevLineIsIndentedCode || lineIsEmpty(state.prevLine)) {\n        state.indentation -= 4;\n        state.indentedCode = true;\n        return tokenTypes.code;\n      } else {\n        return null;\n      }\n    } else if (stream.eatSpace()) {\n      return null;\n    } else if ((match = stream.match(atxHeaderRE)) && match[1].length <= 6) {\n      state.header = match[1].length;\n      if (modeCfg.highlightFormatting) state.formatting = \"header\";\n      state.f = state.inline;\n      return getType(state);\n    } else if (!lineIsEmpty(state.prevLine) && !state.quote && !prevLineIsList &&\n               !prevLineIsIndentedCode && (match = stream.match(setextHeaderRE))) {\n      state.header = match[0].charAt(0) == '=' ? 1 : 2;\n      if (modeCfg.highlightFormatting) state.formatting = \"header\";\n      state.f = state.inline;\n      return getType(state);\n    } else if (stream.eat('>')) {\n      state.quote = sol ? 1 : state.quote + 1;\n      if (modeCfg.highlightFormatting) state.formatting = \"quote\";\n      stream.eatSpace();\n      return getType(state);\n    } else if (stream.peek() === '[') {\n      return switchInline(stream, state, footnoteLink);\n    } else if (stream.match(hrRE, true)) {\n      state.hr = true;\n      return tokenTypes.hr;\n    } else if (match = stream.match(listRE)) {\n      var listType = match[1] ? \"ol\" : \"ul\";\n      state.indentation = stream.column() + stream.current().length;\n      state.list = true;\n\n      // While this list item's marker's indentation\n      // is less than the deepest list item's content's indentation,\n      // pop the deepest list item indentation off the stack.\n      while (state.listStack && stream.column() < state.listStack[state.listStack.length - 1]) {\n        state.listStack.pop();\n      }\n\n      // Add this list item's content's indentation to the stack\n      state.listStack.push(state.indentation);\n\n      if (modeCfg.taskLists && stream.match(taskListRE, false)) {\n        state.taskList = true;\n      }\n      state.f = state.inline;\n      if (modeCfg.highlightFormatting) state.formatting = [\"list\", \"list-\" + listType];\n      return getType(state);\n    } else if (modeCfg.fencedCodeBlocks && (match = stream.match(fencedCodeRE, true))) {\n      state.fencedChars = match[1]\n      // try switching mode\n      state.localMode = getMode(match[2]);\n      if (state.localMode) state.localState = CodeMirror.startState(state.localMode);\n      state.f = state.block = local;\n      if (modeCfg.highlightFormatting) state.formatting = \"code-block\";\n      state.code = -1\n      return getType(state);\n    }\n\n    return switchInline(stream, state, state.inline);\n  }\n\n  function htmlBlock(stream, state) {\n    var style = htmlMode.token(stream, state.htmlState);\n    if (!htmlModeMissing) {\n      var inner = CodeMirror.innerMode(htmlMode, state.htmlState)\n      if ((inner.mode.name == \"xml\" && inner.state.tagStart === null &&\n           (!inner.state.context && inner.state.tokenize.isInText)) ||\n          (state.md_inside && stream.current().indexOf(\">\") > -1)) {\n        state.f = inlineNormal;\n        state.block = blockNormal;\n        state.htmlState = null;\n      }\n    }\n    return style;\n  }\n\n  function local(stream, state) {\n    if (state.fencedChars && stream.match(state.fencedChars)) {\n      if (modeCfg.highlightFormatting) state.formatting = \"code-block\";\n      var returnType = getType(state)\n      state.localMode = state.localState = null;\n      state.block = blockNormal;\n      state.f = inlineNormal;\n      state.fencedChars = null;\n      state.code = 0\n      return returnType;\n    } else if (state.fencedChars && stream.skipTo(state.fencedChars)) {\n      return \"comment\"\n    } else if (state.localMode) {\n      return state.localMode.token(stream, state.localState);\n    } else {\n      stream.skipToEnd();\n      return tokenTypes.code;\n    }\n  }\n\n  // Inline\n  function getType(state) {\n    var styles = [];\n\n    if (state.formatting) {\n      styles.push(tokenTypes.formatting);\n\n      if (typeof state.formatting === \"string\") state.formatting = [state.formatting];\n\n      for (var i = 0; i < state.formatting.length; i++) {\n        styles.push(tokenTypes.formatting + \"-\" + state.formatting[i]);\n\n        if (state.formatting[i] === \"header\") {\n          styles.push(tokenTypes.formatting + \"-\" + state.formatting[i] + \"-\" + state.header);\n        }\n\n        // Add `formatting-quote` and `formatting-quote-#` for blockquotes\n        // Add `error` instead if the maximum blockquote nesting depth is passed\n        if (state.formatting[i] === \"quote\") {\n          if (!modeCfg.maxBlockquoteDepth || modeCfg.maxBlockquoteDepth >= state.quote) {\n            styles.push(tokenTypes.formatting + \"-\" + state.formatting[i] + \"-\" + state.quote);\n          } else {\n            styles.push(\"error\");\n          }\n        }\n      }\n    }\n\n    if (state.taskOpen) {\n      styles.push(\"meta\");\n      return styles.length ? styles.join(' ') : null;\n    }\n    if (state.taskClosed) {\n      styles.push(\"property\");\n      return styles.length ? styles.join(' ') : null;\n    }\n\n    if (state.linkHref) {\n      styles.push(tokenTypes.linkHref, \"url\");\n    } else { // Only apply inline styles to non-url text\n      if (state.strong) { styles.push(tokenTypes.strong); }\n      if (state.em) { styles.push(tokenTypes.em); }\n      if (state.strikethrough) { styles.push(tokenTypes.strikethrough); }\n      if (state.linkText) { styles.push(tokenTypes.linkText); }\n      if (state.code) { styles.push(tokenTypes.code); }\n      if (state.image) { styles.push(tokenTypes.image); }\n      if (state.imageAltText) { styles.push(tokenTypes.imageAltText, \"link\"); }\n      if (state.imageMarker) { styles.push(tokenTypes.imageMarker); }\n    }\n\n    if (state.header) { styles.push(tokenTypes.header, tokenTypes.header + \"-\" + state.header); }\n\n    if (state.quote) {\n      styles.push(tokenTypes.quote);\n\n      // Add `quote-#` where the maximum for `#` is modeCfg.maxBlockquoteDepth\n      if (!modeCfg.maxBlockquoteDepth || modeCfg.maxBlockquoteDepth >= state.quote) {\n        styles.push(tokenTypes.quote + \"-\" + state.quote);\n      } else {\n        styles.push(tokenTypes.quote + \"-\" + modeCfg.maxBlockquoteDepth);\n      }\n    }\n\n    if (state.list !== false) {\n      var listMod = (state.listStack.length - 1) % 3;\n      if (!listMod) {\n        styles.push(tokenTypes.list1);\n      } else if (listMod === 1) {\n        styles.push(tokenTypes.list2);\n      } else {\n        styles.push(tokenTypes.list3);\n      }\n    }\n\n    if (state.trailingSpaceNewLine) {\n      styles.push(\"trailing-space-new-line\");\n    } else if (state.trailingSpace) {\n      styles.push(\"trailing-space-\" + (state.trailingSpace % 2 ? \"a\" : \"b\"));\n    }\n\n    return styles.length ? styles.join(' ') : null;\n  }\n\n  function handleText(stream, state) {\n    if (stream.match(textRE, true)) {\n      return getType(state);\n    }\n    return undefined;\n  }\n\n  function inlineNormal(stream, state) {\n    var style = state.text(stream, state);\n    if (typeof style !== 'undefined')\n      return style;\n\n    if (state.list) { // List marker (*, +, -, 1., etc)\n      state.list = null;\n      return getType(state);\n    }\n\n    if (state.taskList) {\n      var taskOpen = stream.match(taskListRE, true)[1] !== \"x\";\n      if (taskOpen) state.taskOpen = true;\n      else state.taskClosed = true;\n      if (modeCfg.highlightFormatting) state.formatting = \"task\";\n      state.taskList = false;\n      return getType(state);\n    }\n\n    state.taskOpen = false;\n    state.taskClosed = false;\n\n    if (state.header && stream.match(/^#+$/, true)) {\n      if (modeCfg.highlightFormatting) state.formatting = \"header\";\n      return getType(state);\n    }\n\n    var ch = stream.next();\n\n    // Matches link titles present on next line\n    if (state.linkTitle) {\n      state.linkTitle = false;\n      var matchCh = ch;\n      if (ch === '(') {\n        matchCh = ')';\n      }\n      matchCh = (matchCh+'').replace(/([.?*+^\\[\\]\\\\(){}|-])/g, \"\\\\$1\");\n      var regex = '^\\\\s*(?:[^' + matchCh + '\\\\\\\\]+|\\\\\\\\\\\\\\\\|\\\\\\\\.)' + matchCh;\n      if (stream.match(new RegExp(regex), true)) {\n        return tokenTypes.linkHref;\n      }\n    }\n\n    // If this block is changed, it may need to be updated in GFM mode\n    if (ch === '`') {\n      var previousFormatting = state.formatting;\n      if (modeCfg.highlightFormatting) state.formatting = \"code\";\n      stream.eatWhile('`');\n      var count = stream.current().length\n      if (state.code == 0) {\n        state.code = count\n        return getType(state)\n      } else if (count == state.code) { // Must be exact\n        var t = getType(state)\n        state.code = 0\n        return t\n      } else {\n        state.formatting = previousFormatting\n        return getType(state)\n      }\n    } else if (state.code) {\n      return getType(state);\n    }\n\n    if (ch === '\\\\') {\n      stream.next();\n      if (modeCfg.highlightFormatting) {\n        var type = getType(state);\n        var formattingEscape = tokenTypes.formatting + \"-escape\";\n        return type ? type + \" \" + formattingEscape : formattingEscape;\n      }\n    }\n\n    if (ch === '!' && stream.match(/\\[[^\\]]*\\] ?(?:\\(|\\[)/, false)) {\n      state.imageMarker = true;\n      state.image = true;\n      if (modeCfg.highlightFormatting) state.formatting = \"image\";\n      return getType(state);\n    }\n\n    if (ch === '[' && state.imageMarker && stream.match(/[^\\]]*\\](\\(.*?\\)| ?\\[.*?\\])/, false)) {\n      state.imageMarker = false;\n      state.imageAltText = true\n      if (modeCfg.highlightFormatting) state.formatting = \"image\";\n      return getType(state);\n    }\n\n    if (ch === ']' && state.imageAltText) {\n      if (modeCfg.highlightFormatting) state.formatting = \"image\";\n      var type = getType(state);\n      state.imageAltText = false;\n      state.image = false;\n      state.inline = state.f = linkHref;\n      return type;\n    }\n\n    if (ch === '[' && stream.match(/[^\\]]*\\](\\(.*\\)| ?\\[.*?\\])/, false) && !state.image) {\n      state.linkText = true;\n      if (modeCfg.highlightFormatting) state.formatting = \"link\";\n      return getType(state);\n    }\n\n    if (ch === ']' && state.linkText && stream.match(/\\(.*?\\)| ?\\[.*?\\]/, false)) {\n      if (modeCfg.highlightFormatting) state.formatting = \"link\";\n      var type = getType(state);\n      state.linkText = false;\n      state.inline = state.f = linkHref;\n      return type;\n    }\n\n    if (ch === '<' && stream.match(/^(https?|ftps?):\\/\\/(?:[^\\\\>]|\\\\.)+>/, false)) {\n      state.f = state.inline = linkInline;\n      if (modeCfg.highlightFormatting) state.formatting = \"link\";\n      var type = getType(state);\n      if (type){\n        type += \" \";\n      } else {\n        type = \"\";\n      }\n      return type + tokenTypes.linkInline;\n    }\n\n    if (ch === '<' && stream.match(/^[^> \\\\]+@(?:[^\\\\>]|\\\\.)+>/, false)) {\n      state.f = state.inline = linkInline;\n      if (modeCfg.highlightFormatting) state.formatting = \"link\";\n      var type = getType(state);\n      if (type){\n        type += \" \";\n      } else {\n        type = \"\";\n      }\n      return type + tokenTypes.linkEmail;\n    }\n\n    if (ch === '<' && stream.match(/^(!--|[a-z]+(?:\\s+[a-z_:.\\-]+(?:\\s*=\\s*[^ >]+)?)*\\s*>)/i, false)) {\n      var end = stream.string.indexOf(\">\", stream.pos);\n      if (end != -1) {\n        var atts = stream.string.substring(stream.start, end);\n        if (/markdown\\s*=\\s*('|\"){0,1}1('|\"){0,1}/.test(atts)) state.md_inside = true;\n      }\n      stream.backUp(1);\n      state.htmlState = CodeMirror.startState(htmlMode);\n      return switchBlock(stream, state, htmlBlock);\n    }\n\n    if (ch === '<' && stream.match(/^\\/\\w*?>/)) {\n      state.md_inside = false;\n      return \"tag\";\n    } else if (ch === \"*\" || ch === \"_\") {\n      var len = 1, before = stream.pos == 1 ? \" \" : stream.string.charAt(stream.pos - 2)\n      while (len < 3 && stream.eat(ch)) len++\n      var after = stream.peek() || \" \"\n      // See http://spec.commonmark.org/0.27/#emphasis-and-strong-emphasis\n      var leftFlanking = !/\\s/.test(after) && (!punctuation.test(after) || /\\s/.test(before) || punctuation.test(before))\n      var rightFlanking = !/\\s/.test(before) && (!punctuation.test(before) || /\\s/.test(after) || punctuation.test(after))\n      var setEm = null, setStrong = null\n      if (len % 2) { // Em\n        if (!state.em && leftFlanking && (ch === \"*\" || !rightFlanking || punctuation.test(before)))\n          setEm = true\n        else if (state.em == ch && rightFlanking && (ch === \"*\" || !leftFlanking || punctuation.test(after)))\n          setEm = false\n      }\n      if (len > 1) { // Strong\n        if (!state.strong && leftFlanking && (ch === \"*\" || !rightFlanking || punctuation.test(before)))\n          setStrong = true\n        else if (state.strong == ch && rightFlanking && (ch === \"*\" || !leftFlanking || punctuation.test(after)))\n          setStrong = false\n      }\n      if (setStrong != null || setEm != null) {\n        if (modeCfg.highlightFormatting) state.formatting = setEm == null ? \"strong\" : setStrong == null ? \"em\" : \"strong em\"\n        if (setEm === true) state.em = ch\n        if (setStrong === true) state.strong = ch\n        var t = getType(state)\n        if (setEm === false) state.em = false\n        if (setStrong === false) state.strong = false\n        return t\n      }\n    } else if (ch === ' ') {\n      if (stream.eat('*') || stream.eat('_')) { // Probably surrounded by spaces\n        if (stream.peek() === ' ') { // Surrounded by spaces, ignore\n          return getType(state);\n        } else { // Not surrounded by spaces, back up pointer\n          stream.backUp(1);\n        }\n      }\n    }\n\n    if (modeCfg.strikethrough) {\n      if (ch === '~' && stream.eatWhile(ch)) {\n        if (state.strikethrough) {// Remove strikethrough\n          if (modeCfg.highlightFormatting) state.formatting = \"strikethrough\";\n          var t = getType(state);\n          state.strikethrough = false;\n          return t;\n        } else if (stream.match(/^[^\\s]/, false)) {// Add strikethrough\n          state.strikethrough = true;\n          if (modeCfg.highlightFormatting) state.formatting = \"strikethrough\";\n          return getType(state);\n        }\n      } else if (ch === ' ') {\n        if (stream.match(/^~~/, true)) { // Probably surrounded by space\n          if (stream.peek() === ' ') { // Surrounded by spaces, ignore\n            return getType(state);\n          } else { // Not surrounded by spaces, back up pointer\n            stream.backUp(2);\n          }\n        }\n      }\n    }\n\n    if (ch === ' ') {\n      if (stream.match(/ +$/, false)) {\n        state.trailingSpace++;\n      } else if (state.trailingSpace) {\n        state.trailingSpaceNewLine = true;\n      }\n    }\n\n    return getType(state);\n  }\n\n  function linkInline(stream, state) {\n    var ch = stream.next();\n\n    if (ch === \">\") {\n      state.f = state.inline = inlineNormal;\n      if (modeCfg.highlightFormatting) state.formatting = \"link\";\n      var type = getType(state);\n      if (type){\n        type += \" \";\n      } else {\n        type = \"\";\n      }\n      return type + tokenTypes.linkInline;\n    }\n\n    stream.match(/^[^>]+/, true);\n\n    return tokenTypes.linkInline;\n  }\n\n  function linkHref(stream, state) {\n    // Check if space, and return NULL if so (to avoid marking the space)\n    if(stream.eatSpace()){\n      return null;\n    }\n    var ch = stream.next();\n    if (ch === '(' || ch === '[') {\n      state.f = state.inline = getLinkHrefInside(ch === \"(\" ? \")\" : \"]\", 0);\n      if (modeCfg.highlightFormatting) state.formatting = \"link-string\";\n      state.linkHref = true;\n      return getType(state);\n    }\n    return 'error';\n  }\n\n  var linkRE = {\n    \")\": /^(?:[^\\\\\\(\\)]|\\\\.|\\((?:[^\\\\\\(\\)]|\\\\.)*\\))*?(?=\\))/,\n    \"]\": /^(?:[^\\\\\\[\\]]|\\\\.|\\[(?:[^\\\\\\[\\\\]]|\\\\.)*\\])*?(?=\\])/\n  }\n\n  function getLinkHrefInside(endChar) {\n    return function(stream, state) {\n      var ch = stream.next();\n\n      if (ch === endChar) {\n        state.f = state.inline = inlineNormal;\n        if (modeCfg.highlightFormatting) state.formatting = \"link-string\";\n        var returnState = getType(state);\n        state.linkHref = false;\n        return returnState;\n      }\n\n      stream.match(linkRE[endChar])\n      state.linkHref = true;\n      return getType(state);\n    };\n  }\n\n  function footnoteLink(stream, state) {\n    if (stream.match(/^([^\\]\\\\]|\\\\.)*\\]:/, false)) {\n      state.f = footnoteLinkInside;\n      stream.next(); // Consume [\n      if (modeCfg.highlightFormatting) state.formatting = \"link\";\n      state.linkText = true;\n      return getType(state);\n    }\n    return switchInline(stream, state, inlineNormal);\n  }\n\n  function footnoteLinkInside(stream, state) {\n    if (stream.match(/^\\]:/, true)) {\n      state.f = state.inline = footnoteUrl;\n      if (modeCfg.highlightFormatting) state.formatting = \"link\";\n      var returnType = getType(state);\n      state.linkText = false;\n      return returnType;\n    }\n\n    stream.match(/^([^\\]\\\\]|\\\\.)+/, true);\n\n    return tokenTypes.linkText;\n  }\n\n  function footnoteUrl(stream, state) {\n    // Check if space, and return NULL if so (to avoid marking the space)\n    if(stream.eatSpace()){\n      return null;\n    }\n    // Match URL\n    stream.match(/^[^\\s]+/, true);\n    // Check for link title\n    if (stream.peek() === undefined) { // End of line, set flag to check next line\n      state.linkTitle = true;\n    } else { // More content on line, check if link title\n      stream.match(/^(?:\\s+(?:\"(?:[^\"\\\\]|\\\\\\\\|\\\\.)+\"|'(?:[^'\\\\]|\\\\\\\\|\\\\.)+'|\\((?:[^)\\\\]|\\\\\\\\|\\\\.)+\\)))?/, true);\n    }\n    state.f = state.inline = inlineNormal;\n    return tokenTypes.linkHref + \" url\";\n  }\n\n  var mode = {\n    startState: function() {\n      return {\n        f: blockNormal,\n\n        prevLine: null,\n        thisLine: null,\n\n        block: blockNormal,\n        htmlState: null,\n        indentation: 0,\n\n        inline: inlineNormal,\n        text: handleText,\n\n        formatting: false,\n        linkText: false,\n        linkHref: false,\n        linkTitle: false,\n        code: 0,\n        em: false,\n        strong: false,\n        header: 0,\n        hr: false,\n        taskList: false,\n        list: false,\n        listStack: [],\n        quote: 0,\n        trailingSpace: 0,\n        trailingSpaceNewLine: false,\n        strikethrough: false,\n        fencedChars: null\n      };\n    },\n\n    copyState: function(s) {\n      return {\n        f: s.f,\n\n        prevLine: s.prevLine,\n        thisLine: s.thisLine,\n\n        block: s.block,\n        htmlState: s.htmlState && CodeMirror.copyState(htmlMode, s.htmlState),\n        indentation: s.indentation,\n\n        localMode: s.localMode,\n        localState: s.localMode ? CodeMirror.copyState(s.localMode, s.localState) : null,\n\n        inline: s.inline,\n        text: s.text,\n        formatting: false,\n        linkTitle: s.linkTitle,\n        code: s.code,\n        em: s.em,\n        strong: s.strong,\n        strikethrough: s.strikethrough,\n        header: s.header,\n        hr: s.hr,\n        taskList: s.taskList,\n        list: s.list,\n        listStack: s.listStack.slice(0),\n        quote: s.quote,\n        indentedCode: s.indentedCode,\n        trailingSpace: s.trailingSpace,\n        trailingSpaceNewLine: s.trailingSpaceNewLine,\n        md_inside: s.md_inside,\n        fencedChars: s.fencedChars\n      };\n    },\n\n    token: function(stream, state) {\n\n      // Reset state.formatting\n      state.formatting = false;\n\n      if (stream != state.thisLine) {\n        var forceBlankLine = state.header || state.hr;\n\n        // Reset state.header and state.hr\n        state.header = 0;\n        state.hr = false;\n\n        if (stream.match(/^\\s*$/, true) || forceBlankLine) {\n          blankLine(state);\n          if (!forceBlankLine) return null\n          state.prevLine = null\n        }\n\n        state.prevLine = state.thisLine\n        state.thisLine = stream\n\n        // Reset state.taskList\n        state.taskList = false;\n\n        // Reset state.trailingSpace\n        state.trailingSpace = 0;\n        state.trailingSpaceNewLine = false;\n\n        state.f = state.block;\n        var indentation = stream.match(/^\\s*/, true)[0].replace(/\\t/g, '    ').length;\n        state.indentationDiff = Math.min(indentation - state.indentation, 4);\n        state.indentation = state.indentation + state.indentationDiff;\n        if (indentation > 0) return null;\n      }\n      return state.f(stream, state);\n    },\n\n    innerMode: function(state) {\n      if (state.block == htmlBlock) return {state: state.htmlState, mode: htmlMode};\n      if (state.localState) return {state: state.localState, mode: state.localMode};\n      return {state: state, mode: mode};\n    },\n\n    blankLine: blankLine,\n\n    getType: getType,\n\n    closeBrackets: \"()[]{}''\\\"\\\"``\",\n    fold: \"markdown\"\n  };\n  return mode;\n}, \"xml\");\n\nCodeMirror.defineMIME(\"text/x-markdown\", \"markdown\");\n\n});\n"]}