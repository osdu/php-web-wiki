{"version":3,"sources":["../../node_modules/codemirror/keymap/emacs.js"],"names":["mod","exports","module","require","define","amd","CodeMirror","Pos","posEq","a","b","line","ch","killRing","addToRing","str","push","length","shift","growRingTop","getFromRing","n","Math","min","popFromRing","pop","lastKill","kill","cm","from","to","mayGrow","text","getRange","pos","isClean","gen","replaceRange","changeGeneration","byChar","dir","findPosH","byWord","byLine","findPosV","doc","sel","goalColumn","byPage","byParagraph","no","getLine","sawText","test","slice","fst","firstLine","lst","lastLine","clipPos","hasText","bySentence","sawWord","next","charAt","byExpr","wrap","findMatchingBracket","match","forward","first","token","getTokenAt","after","start","end","string","newPos","getPrefix","precise","digits","state","emacsPrefix","clearPrefix","Number","repeated","cmd","f","execCommand","prefix","i","findEnd","by","move","extendSelection","getCursor","motion","killTo","selections","listSelections","cursor","head","killRegion","somethingSelected","selection","anchor","addPrefix","digit","on","maybeClearPrefix","maybeDuplicateInput","prefixPreservingKeys","Alt-G","Ctrl-X","Ctrl-Q","Ctrl-U","arg","emacsPrefixMap","hasOwnProperty","off","event","dup","origin","one","join","txt","replaceSelection","addPrefixMap","addKeyMap","prefixMap","maybeRemovePrefixMap","removeKeyMap","setMark","setCursor","setExtending","getExtending","clearMark","getInput","msg","openDialog","bottom","prompt","operateOnWord","op","toEnclosingExpr","stack","quit","emacs","keyMap","normalizeKeyMap","Ctrl-W","Ctrl-K","Alt-W","getSelection","Ctrl-Y","setSelection","Alt-Y","Ctrl-Space","Ctrl-Shift-2","Ctrl-F","Ctrl-B","Right","Left","Ctrl-D","Delete","Ctrl-H","Backspace","Alt-F","Alt-B","Alt-D","Alt-Backspace","Ctrl-N","Ctrl-P","Down","Up","Ctrl-A","Ctrl-E","End","Home","Alt-V","Ctrl-V","PageUp","PageDown","Ctrl-Up","Ctrl-Down","Alt-A","Alt-E","Alt-K","Ctrl-Alt-K","Ctrl-Alt-Backspace","Ctrl-Alt-F","Ctrl-Alt-B","Shift-Ctrl-Alt-2","Ctrl-Alt-T","leftStart","leftEnd","rightEnd","rightStart","Ctrl-Alt-U","Alt-Space","Ctrl-O","Ctrl-T","Alt-C","w","letter","search","toUpperCase","toLowerCase","Alt-U","Alt-L","Alt-;","Ctrl-/","Shift-Ctrl--","Ctrl-Z","Cmd-Z","Shift-Alt-,","Shift-Alt-.","Ctrl-S","Ctrl-R","Ctrl-G","Shift-Alt-5","Alt-/","Enter","Ctrl-J","Tab","Alt-G G","num","isNaN","Ctrl-X Tab","indentSelection","getOption","Ctrl-X Ctrl-X","Ctrl-X Ctrl-S","Ctrl-X Ctrl-W","Ctrl-X S","Ctrl-X F","Ctrl-X U","Ctrl-X K","Ctrl-X Delete","Ctrl-X H","Ctrl-Q Tab","regPrefix","d","String"],"mappings":"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","file":"emacs.min.js","sourcesContent":["// CodeMirror, copyright (c) by Marijn Haverbeke and others\n// Distributed under an MIT license: http://codemirror.net/LICENSE\n\n(function(mod) {\n  if (typeof exports == \"object\" && typeof module == \"object\") // CommonJS\n    mod(require(\"../lib/codemirror\"));\n  else if (typeof define == \"function\" && define.amd) // AMD\n    define([\"../lib/codemirror\"], mod);\n  else // Plain browser env\n    mod(CodeMirror);\n})(function(CodeMirror) {\n  \"use strict\";\n\n  var Pos = CodeMirror.Pos;\n  function posEq(a, b) { return a.line == b.line && a.ch == b.ch; }\n\n  // Kill 'ring'\n\n  var killRing = [];\n  function addToRing(str) {\n    killRing.push(str);\n    if (killRing.length > 50) killRing.shift();\n  }\n  function growRingTop(str) {\n    if (!killRing.length) return addToRing(str);\n    killRing[killRing.length - 1] += str;\n  }\n  function getFromRing(n) { return killRing[killRing.length - (n ? Math.min(n, 1) : 1)] || \"\"; }\n  function popFromRing() { if (killRing.length > 1) killRing.pop(); return getFromRing(); }\n\n  var lastKill = null;\n\n  function kill(cm, from, to, mayGrow, text) {\n    if (text == null) text = cm.getRange(from, to);\n\n    if (mayGrow && lastKill && lastKill.cm == cm && posEq(from, lastKill.pos) && cm.isClean(lastKill.gen))\n      growRingTop(text);\n    else\n      addToRing(text);\n    cm.replaceRange(\"\", from, to, \"+delete\");\n\n    if (mayGrow) lastKill = {cm: cm, pos: from, gen: cm.changeGeneration()};\n    else lastKill = null;\n  }\n\n  // Boundaries of various units\n\n  function byChar(cm, pos, dir) {\n    return cm.findPosH(pos, dir, \"char\", true);\n  }\n\n  function byWord(cm, pos, dir) {\n    return cm.findPosH(pos, dir, \"word\", true);\n  }\n\n  function byLine(cm, pos, dir) {\n    return cm.findPosV(pos, dir, \"line\", cm.doc.sel.goalColumn);\n  }\n\n  function byPage(cm, pos, dir) {\n    return cm.findPosV(pos, dir, \"page\", cm.doc.sel.goalColumn);\n  }\n\n  function byParagraph(cm, pos, dir) {\n    var no = pos.line, line = cm.getLine(no);\n    var sawText = /\\S/.test(dir < 0 ? line.slice(0, pos.ch) : line.slice(pos.ch));\n    var fst = cm.firstLine(), lst = cm.lastLine();\n    for (;;) {\n      no += dir;\n      if (no < fst || no > lst)\n        return cm.clipPos(Pos(no - dir, dir < 0 ? 0 : null));\n      line = cm.getLine(no);\n      var hasText = /\\S/.test(line);\n      if (hasText) sawText = true;\n      else if (sawText) return Pos(no, 0);\n    }\n  }\n\n  function bySentence(cm, pos, dir) {\n    var line = pos.line, ch = pos.ch;\n    var text = cm.getLine(pos.line), sawWord = false;\n    for (;;) {\n      var next = text.charAt(ch + (dir < 0 ? -1 : 0));\n      if (!next) { // End/beginning of line reached\n        if (line == (dir < 0 ? cm.firstLine() : cm.lastLine())) return Pos(line, ch);\n        text = cm.getLine(line + dir);\n        if (!/\\S/.test(text)) return Pos(line, ch);\n        line += dir;\n        ch = dir < 0 ? text.length : 0;\n        continue;\n      }\n      if (sawWord && /[!?.]/.test(next)) return Pos(line, ch + (dir > 0 ? 1 : 0));\n      if (!sawWord) sawWord = /\\w/.test(next);\n      ch += dir;\n    }\n  }\n\n  function byExpr(cm, pos, dir) {\n    var wrap;\n    if (cm.findMatchingBracket && (wrap = cm.findMatchingBracket(pos, true))\n        && wrap.match && (wrap.forward ? 1 : -1) == dir)\n      return dir > 0 ? Pos(wrap.to.line, wrap.to.ch + 1) : wrap.to;\n\n    for (var first = true;; first = false) {\n      var token = cm.getTokenAt(pos);\n      var after = Pos(pos.line, dir < 0 ? token.start : token.end);\n      if (first && dir > 0 && token.end == pos.ch || !/\\w/.test(token.string)) {\n        var newPos = cm.findPosH(after, dir, \"char\");\n        if (posEq(after, newPos)) return pos;\n        else pos = newPos;\n      } else {\n        return after;\n      }\n    }\n  }\n\n  // Prefixes (only crudely supported)\n\n  function getPrefix(cm, precise) {\n    var digits = cm.state.emacsPrefix;\n    if (!digits) return precise ? null : 1;\n    clearPrefix(cm);\n    return digits == \"-\" ? -1 : Number(digits);\n  }\n\n  function repeated(cmd) {\n    var f = typeof cmd == \"string\" ? function(cm) { cm.execCommand(cmd); } : cmd;\n    return function(cm) {\n      var prefix = getPrefix(cm);\n      f(cm);\n      for (var i = 1; i < prefix; ++i) f(cm);\n    };\n  }\n\n  function findEnd(cm, pos, by, dir) {\n    var prefix = getPrefix(cm);\n    if (prefix < 0) { dir = -dir; prefix = -prefix; }\n    for (var i = 0; i < prefix; ++i) {\n      var newPos = by(cm, pos, dir);\n      if (posEq(newPos, pos)) break;\n      pos = newPos;\n    }\n    return pos;\n  }\n\n  function move(by, dir) {\n    var f = function(cm) {\n      cm.extendSelection(findEnd(cm, cm.getCursor(), by, dir));\n    };\n    f.motion = true;\n    return f;\n  }\n\n  function killTo(cm, by, dir) {\n    var selections = cm.listSelections(), cursor;\n    var i = selections.length;\n    while (i--) {\n      cursor = selections[i].head;\n      kill(cm, cursor, findEnd(cm, cursor, by, dir), true);\n    }\n  }\n\n  function killRegion(cm) {\n    if (cm.somethingSelected()) {\n      var selections = cm.listSelections(), selection;\n      var i = selections.length;\n      while (i--) {\n        selection = selections[i];\n        kill(cm, selection.anchor, selection.head);\n      }\n      return true;\n    }\n  }\n\n  function addPrefix(cm, digit) {\n    if (cm.state.emacsPrefix) {\n      if (digit != \"-\") cm.state.emacsPrefix += digit;\n      return;\n    }\n    // Not active yet\n    cm.state.emacsPrefix = digit;\n    cm.on(\"keyHandled\", maybeClearPrefix);\n    cm.on(\"inputRead\", maybeDuplicateInput);\n  }\n\n  var prefixPreservingKeys = {\"Alt-G\": true, \"Ctrl-X\": true, \"Ctrl-Q\": true, \"Ctrl-U\": true};\n\n  function maybeClearPrefix(cm, arg) {\n    if (!cm.state.emacsPrefixMap && !prefixPreservingKeys.hasOwnProperty(arg))\n      clearPrefix(cm);\n  }\n\n  function clearPrefix(cm) {\n    cm.state.emacsPrefix = null;\n    cm.off(\"keyHandled\", maybeClearPrefix);\n    cm.off(\"inputRead\", maybeDuplicateInput);\n  }\n\n  function maybeDuplicateInput(cm, event) {\n    var dup = getPrefix(cm);\n    if (dup > 1 && event.origin == \"+input\") {\n      var one = event.text.join(\"\\n\"), txt = \"\";\n      for (var i = 1; i < dup; ++i) txt += one;\n      cm.replaceSelection(txt);\n    }\n  }\n\n  function addPrefixMap(cm) {\n    cm.state.emacsPrefixMap = true;\n    cm.addKeyMap(prefixMap);\n    cm.on(\"keyHandled\", maybeRemovePrefixMap);\n    cm.on(\"inputRead\", maybeRemovePrefixMap);\n  }\n\n  function maybeRemovePrefixMap(cm, arg) {\n    if (typeof arg == \"string\" && (/^\\d$/.test(arg) || arg == \"Ctrl-U\")) return;\n    cm.removeKeyMap(prefixMap);\n    cm.state.emacsPrefixMap = false;\n    cm.off(\"keyHandled\", maybeRemovePrefixMap);\n    cm.off(\"inputRead\", maybeRemovePrefixMap);\n  }\n\n  // Utilities\n\n  function setMark(cm) {\n    cm.setCursor(cm.getCursor());\n    cm.setExtending(!cm.getExtending());\n    cm.on(\"change\", function() { cm.setExtending(false); });\n  }\n\n  function clearMark(cm) {\n    cm.setExtending(false);\n    cm.setCursor(cm.getCursor());\n  }\n\n  function getInput(cm, msg, f) {\n    if (cm.openDialog)\n      cm.openDialog(msg + \": <input type=\\\"text\\\" style=\\\"width: 10em\\\"/>\", f, {bottom: true});\n    else\n      f(prompt(msg, \"\"));\n  }\n\n  function operateOnWord(cm, op) {\n    var start = cm.getCursor(), end = cm.findPosH(start, 1, \"word\");\n    cm.replaceRange(op(cm.getRange(start, end)), start, end);\n    cm.setCursor(end);\n  }\n\n  function toEnclosingExpr(cm) {\n    var pos = cm.getCursor(), line = pos.line, ch = pos.ch;\n    var stack = [];\n    while (line >= cm.firstLine()) {\n      var text = cm.getLine(line);\n      for (var i = ch == null ? text.length : ch; i > 0;) {\n        var ch = text.charAt(--i);\n        if (ch == \")\")\n          stack.push(\"(\");\n        else if (ch == \"]\")\n          stack.push(\"[\");\n        else if (ch == \"}\")\n          stack.push(\"{\");\n        else if (/[\\(\\{\\[]/.test(ch) && (!stack.length || stack.pop() != ch))\n          return cm.extendSelection(Pos(line, i));\n      }\n      --line; ch = null;\n    }\n  }\n\n  function quit(cm) {\n    cm.execCommand(\"clearSearch\");\n    clearMark(cm);\n  }\n\n  CodeMirror.emacs = {kill: kill, killRegion: killRegion, repeated: repeated};\n\n  // Actual keymap\n\n  var keyMap = CodeMirror.keyMap.emacs = CodeMirror.normalizeKeyMap({\n    \"Ctrl-W\": function(cm) {kill(cm, cm.getCursor(\"start\"), cm.getCursor(\"end\"));},\n    \"Ctrl-K\": repeated(function(cm) {\n      var start = cm.getCursor(), end = cm.clipPos(Pos(start.line));\n      var text = cm.getRange(start, end);\n      if (!/\\S/.test(text)) {\n        text += \"\\n\";\n        end = Pos(start.line + 1, 0);\n      }\n      kill(cm, start, end, true, text);\n    }),\n    \"Alt-W\": function(cm) {\n      addToRing(cm.getSelection());\n      clearMark(cm);\n    },\n    \"Ctrl-Y\": function(cm) {\n      var start = cm.getCursor();\n      cm.replaceRange(getFromRing(getPrefix(cm)), start, start, \"paste\");\n      cm.setSelection(start, cm.getCursor());\n    },\n    \"Alt-Y\": function(cm) {cm.replaceSelection(popFromRing(), \"around\", \"paste\");},\n\n    \"Ctrl-Space\": setMark, \"Ctrl-Shift-2\": setMark,\n\n    \"Ctrl-F\": move(byChar, 1), \"Ctrl-B\": move(byChar, -1),\n    \"Right\": move(byChar, 1), \"Left\": move(byChar, -1),\n    \"Ctrl-D\": function(cm) { killTo(cm, byChar, 1); },\n    \"Delete\": function(cm) { killRegion(cm) || killTo(cm, byChar, 1); },\n    \"Ctrl-H\": function(cm) { killTo(cm, byChar, -1); },\n    \"Backspace\": function(cm) { killRegion(cm) || killTo(cm, byChar, -1); },\n\n    \"Alt-F\": move(byWord, 1), \"Alt-B\": move(byWord, -1),\n    \"Alt-D\": function(cm) { killTo(cm, byWord, 1); },\n    \"Alt-Backspace\": function(cm) { killTo(cm, byWord, -1); },\n\n    \"Ctrl-N\": move(byLine, 1), \"Ctrl-P\": move(byLine, -1),\n    \"Down\": move(byLine, 1), \"Up\": move(byLine, -1),\n    \"Ctrl-A\": \"goLineStart\", \"Ctrl-E\": \"goLineEnd\",\n    \"End\": \"goLineEnd\", \"Home\": \"goLineStart\",\n\n    \"Alt-V\": move(byPage, -1), \"Ctrl-V\": move(byPage, 1),\n    \"PageUp\": move(byPage, -1), \"PageDown\": move(byPage, 1),\n\n    \"Ctrl-Up\": move(byParagraph, -1), \"Ctrl-Down\": move(byParagraph, 1),\n\n    \"Alt-A\": move(bySentence, -1), \"Alt-E\": move(bySentence, 1),\n    \"Alt-K\": function(cm) { killTo(cm, bySentence, 1); },\n\n    \"Ctrl-Alt-K\": function(cm) { killTo(cm, byExpr, 1); },\n    \"Ctrl-Alt-Backspace\": function(cm) { killTo(cm, byExpr, -1); },\n    \"Ctrl-Alt-F\": move(byExpr, 1), \"Ctrl-Alt-B\": move(byExpr, -1),\n\n    \"Shift-Ctrl-Alt-2\": function(cm) {\n      var cursor = cm.getCursor();\n      cm.setSelection(findEnd(cm, cursor, byExpr, 1), cursor);\n    },\n    \"Ctrl-Alt-T\": function(cm) {\n      var leftStart = byExpr(cm, cm.getCursor(), -1), leftEnd = byExpr(cm, leftStart, 1);\n      var rightEnd = byExpr(cm, leftEnd, 1), rightStart = byExpr(cm, rightEnd, -1);\n      cm.replaceRange(cm.getRange(rightStart, rightEnd) + cm.getRange(leftEnd, rightStart) +\n                      cm.getRange(leftStart, leftEnd), leftStart, rightEnd);\n    },\n    \"Ctrl-Alt-U\": repeated(toEnclosingExpr),\n\n    \"Alt-Space\": function(cm) {\n      var pos = cm.getCursor(), from = pos.ch, to = pos.ch, text = cm.getLine(pos.line);\n      while (from && /\\s/.test(text.charAt(from - 1))) --from;\n      while (to < text.length && /\\s/.test(text.charAt(to))) ++to;\n      cm.replaceRange(\" \", Pos(pos.line, from), Pos(pos.line, to));\n    },\n    \"Ctrl-O\": repeated(function(cm) { cm.replaceSelection(\"\\n\", \"start\"); }),\n    \"Ctrl-T\": repeated(function(cm) {\n      cm.execCommand(\"transposeChars\");\n    }),\n\n    \"Alt-C\": repeated(function(cm) {\n      operateOnWord(cm, function(w) {\n        var letter = w.search(/\\w/);\n        if (letter == -1) return w;\n        return w.slice(0, letter) + w.charAt(letter).toUpperCase() + w.slice(letter + 1).toLowerCase();\n      });\n    }),\n    \"Alt-U\": repeated(function(cm) {\n      operateOnWord(cm, function(w) { return w.toUpperCase(); });\n    }),\n    \"Alt-L\": repeated(function(cm) {\n      operateOnWord(cm, function(w) { return w.toLowerCase(); });\n    }),\n\n    \"Alt-;\": \"toggleComment\",\n\n    \"Ctrl-/\": repeated(\"undo\"), \"Shift-Ctrl--\": repeated(\"undo\"),\n    \"Ctrl-Z\": repeated(\"undo\"), \"Cmd-Z\": repeated(\"undo\"),\n    \"Shift-Alt-,\": \"goDocStart\", \"Shift-Alt-.\": \"goDocEnd\",\n    \"Ctrl-S\": \"findNext\", \"Ctrl-R\": \"findPrev\", \"Ctrl-G\": quit, \"Shift-Alt-5\": \"replace\",\n    \"Alt-/\": \"autocomplete\",\n    \"Enter\": \"newlineAndIndent\",\n    \"Ctrl-J\": repeated(function(cm) { cm.replaceSelection(\"\\n\", \"end\"); }),\n    \"Tab\": \"indentAuto\",\n\n    \"Alt-G G\": function(cm) {\n      var prefix = getPrefix(cm, true);\n      if (prefix != null && prefix > 0) return cm.setCursor(prefix - 1);\n\n      getInput(cm, \"Goto line\", function(str) {\n        var num;\n        if (str && !isNaN(num = Number(str)) && num == (num|0) && num > 0)\n          cm.setCursor(num - 1);\n      });\n    },\n\n    \"Ctrl-X Tab\": function(cm) {\n      cm.indentSelection(getPrefix(cm, true) || cm.getOption(\"indentUnit\"));\n    },\n    \"Ctrl-X Ctrl-X\": function(cm) {\n      cm.setSelection(cm.getCursor(\"head\"), cm.getCursor(\"anchor\"));\n    },\n    \"Ctrl-X Ctrl-S\": \"save\",\n    \"Ctrl-X Ctrl-W\": \"save\",\n    \"Ctrl-X S\": \"saveAll\",\n    \"Ctrl-X F\": \"open\",\n    \"Ctrl-X U\": repeated(\"undo\"),\n    \"Ctrl-X K\": \"close\",\n    \"Ctrl-X Delete\": function(cm) { kill(cm, cm.getCursor(), bySentence(cm, cm.getCursor(), 1), true); },\n    \"Ctrl-X H\": \"selectAll\",\n\n    \"Ctrl-Q Tab\": repeated(\"insertTab\"),\n    \"Ctrl-U\": addPrefixMap\n  });\n\n  var prefixMap = {\"Ctrl-G\": clearPrefix};\n  function regPrefix(d) {\n    prefixMap[d] = function(cm) { addPrefix(cm, d); };\n    keyMap[\"Ctrl-\" + d] = function(cm) { addPrefix(cm, d); };\n    prefixPreservingKeys[\"Ctrl-\" + d] = true;\n  }\n  for (var i = 0; i < 10; ++i) regPrefix(String(i));\n  regPrefix(\"-\");\n});\n"]}