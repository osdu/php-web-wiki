{"version":3,"sources":["../../node_modules/codemirror/keymap/sublime.js"],"names":["mod","exports","module","require","define","amd","CodeMirror","map","keyMap","sublime","fallthrough","cmds","commands","Pos","mac","macDefault","ctrl","findPosSubword","doc","start","dir","ch","clipPos","line","getLine","length","state","type","pos","e","i","next","charAt","cat","isWordChar","toUpperCase","moveSubword","cm","extendSelectionsBy","range","display","shift","extend","empty","head","from","to","goSubwordCombo","scrollLineCombo","info","getScrollInfo","somethingSelected","visibleBottomLine","lineAtHeight","top","clientHeight","getCursor","execCommand","scrollTo","defaultTextHeight","visibleTopLine","ranges","listSelections","lineRanges","push","anchor","setSelections","setSelection","scroll","extended","insertLine","above","isReadOnly","Pass","operation","len","newSelection","last","at","replaceRange","indentLine","wordAt","end","word","slice","fullWord","sublimeFindFullWord","sel","cmpPos","text","getRange","query","RegExp","cur","getSearchCursor","found","findNext","firstLine","isSelectedRange","addSelection","mirror","selectBetweenBrackets","newRanges","opening","scanForBracket","closing","indexOf","prev","swapLineCombo","linesToMove","newSels","lastLine","scrollIntoView","toggleComment","indent","joined","offset","obj","actual","exec","rangeCount","sortLines","caseSensitive","toSort","selected","lines","sort","a","b","au","bu","marks","sublimeBookmarks","current","find","unshift","pop","findMarks","j","sublimeBookmark","clear","k","splice","markText","clearWhenEmpty","cK","modifyWordOrSelection","indices","replacements","replaceSelections","cursors","indentUnit","getOption","cursor","toStartOfLine","column","countColumn","deletePos","findPosH","test","prevIndent","findColumn","str","toLowerCase","sublimeMark","setBookmark","tmp","sublimeKilled","setCursor","replaceSelection","cursorCoords","bottom","selectLinesCombo","getTarget","findAndGoTo","forward","target","findPrevious","matches","primaryIndex","normalizeKeyMap"],"mappings":"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","file":"sublime.min.js","sourcesContent":["// CodeMirror, copyright (c) by Marijn Haverbeke and others\n// Distributed under an MIT license: http://codemirror.net/LICENSE\n\n// A rough approximation of Sublime Text's keybindings\n// Depends on addon/search/searchcursor.js and optionally addon/dialog/dialogs.js\n\n(function(mod) {\n  if (typeof exports == \"object\" && typeof module == \"object\") // CommonJS\n    mod(require(\"../lib/codemirror\"), require(\"../addon/search/searchcursor\"), require(\"../addon/edit/matchbrackets\"));\n  else if (typeof define == \"function\" && define.amd) // AMD\n    define([\"../lib/codemirror\", \"../addon/search/searchcursor\", \"../addon/edit/matchbrackets\"], mod);\n  else // Plain browser env\n    mod(CodeMirror);\n})(function(CodeMirror) {\n  \"use strict\";\n\n  var map = CodeMirror.keyMap.sublime = {fallthrough: \"default\"};\n  var cmds = CodeMirror.commands;\n  var Pos = CodeMirror.Pos;\n  var mac = CodeMirror.keyMap[\"default\"] == CodeMirror.keyMap.macDefault;\n  var ctrl = mac ? \"Cmd-\" : \"Ctrl-\";\n\n  // This is not exactly Sublime's algorithm. I couldn't make heads or tails of that.\n  function findPosSubword(doc, start, dir) {\n    if (dir < 0 && start.ch == 0) return doc.clipPos(Pos(start.line - 1));\n    var line = doc.getLine(start.line);\n    if (dir > 0 && start.ch >= line.length) return doc.clipPos(Pos(start.line + 1, 0));\n    var state = \"start\", type;\n    for (var pos = start.ch, e = dir < 0 ? 0 : line.length, i = 0; pos != e; pos += dir, i++) {\n      var next = line.charAt(dir < 0 ? pos - 1 : pos);\n      var cat = next != \"_\" && CodeMirror.isWordChar(next) ? \"w\" : \"o\";\n      if (cat == \"w\" && next.toUpperCase() == next) cat = \"W\";\n      if (state == \"start\") {\n        if (cat != \"o\") { state = \"in\"; type = cat; }\n      } else if (state == \"in\") {\n        if (type != cat) {\n          if (type == \"w\" && cat == \"W\" && dir < 0) pos--;\n          if (type == \"W\" && cat == \"w\" && dir > 0) { type = \"w\"; continue; }\n          break;\n        }\n      }\n    }\n    return Pos(start.line, pos);\n  }\n\n  function moveSubword(cm, dir) {\n    cm.extendSelectionsBy(function(range) {\n      if (cm.display.shift || cm.doc.extend || range.empty())\n        return findPosSubword(cm.doc, range.head, dir);\n      else\n        return dir < 0 ? range.from() : range.to();\n    });\n  }\n\n  var goSubwordCombo = mac ? \"Ctrl-\" : \"Alt-\";\n\n  cmds[map[goSubwordCombo + \"Left\"] = \"goSubwordLeft\"] = function(cm) { moveSubword(cm, -1); };\n  cmds[map[goSubwordCombo + \"Right\"] = \"goSubwordRight\"] = function(cm) { moveSubword(cm, 1); };\n\n  if (mac) map[\"Cmd-Left\"] = \"goLineStartSmart\";\n\n  var scrollLineCombo = mac ? \"Ctrl-Alt-\" : \"Ctrl-\";\n\n  cmds[map[scrollLineCombo + \"Up\"] = \"scrollLineUp\"] = function(cm) {\n    var info = cm.getScrollInfo();\n    if (!cm.somethingSelected()) {\n      var visibleBottomLine = cm.lineAtHeight(info.top + info.clientHeight, \"local\");\n      if (cm.getCursor().line >= visibleBottomLine)\n        cm.execCommand(\"goLineUp\");\n    }\n    cm.scrollTo(null, info.top - cm.defaultTextHeight());\n  };\n  cmds[map[scrollLineCombo + \"Down\"] = \"scrollLineDown\"] = function(cm) {\n    var info = cm.getScrollInfo();\n    if (!cm.somethingSelected()) {\n      var visibleTopLine = cm.lineAtHeight(info.top, \"local\")+1;\n      if (cm.getCursor().line <= visibleTopLine)\n        cm.execCommand(\"goLineDown\");\n    }\n    cm.scrollTo(null, info.top + cm.defaultTextHeight());\n  };\n\n  cmds[map[\"Shift-\" + ctrl + \"L\"] = \"splitSelectionByLine\"] = function(cm) {\n    var ranges = cm.listSelections(), lineRanges = [];\n    for (var i = 0; i < ranges.length; i++) {\n      var from = ranges[i].from(), to = ranges[i].to();\n      for (var line = from.line; line <= to.line; ++line)\n        if (!(to.line > from.line && line == to.line && to.ch == 0))\n          lineRanges.push({anchor: line == from.line ? from : Pos(line, 0),\n                           head: line == to.line ? to : Pos(line)});\n    }\n    cm.setSelections(lineRanges, 0);\n  };\n\n  map[\"Shift-Tab\"] = \"indentLess\";\n\n  cmds[map[\"Esc\"] = \"singleSelectionTop\"] = function(cm) {\n    var range = cm.listSelections()[0];\n    cm.setSelection(range.anchor, range.head, {scroll: false});\n  };\n\n  cmds[map[ctrl + \"L\"] = \"selectLine\"] = function(cm) {\n    var ranges = cm.listSelections(), extended = [];\n    for (var i = 0; i < ranges.length; i++) {\n      var range = ranges[i];\n      extended.push({anchor: Pos(range.from().line, 0),\n                     head: Pos(range.to().line + 1, 0)});\n    }\n    cm.setSelections(extended);\n  };\n\n  map[\"Shift-Ctrl-K\"] = \"deleteLine\";\n\n  function insertLine(cm, above) {\n    if (cm.isReadOnly()) return CodeMirror.Pass\n    cm.operation(function() {\n      var len = cm.listSelections().length, newSelection = [], last = -1;\n      for (var i = 0; i < len; i++) {\n        var head = cm.listSelections()[i].head;\n        if (head.line <= last) continue;\n        var at = Pos(head.line + (above ? 0 : 1), 0);\n        cm.replaceRange(\"\\n\", at, null, \"+insertLine\");\n        cm.indentLine(at.line, null, true);\n        newSelection.push({head: at, anchor: at});\n        last = head.line + 1;\n      }\n      cm.setSelections(newSelection);\n    });\n    cm.execCommand(\"indentAuto\");\n  }\n\n  cmds[map[ctrl + \"Enter\"] = \"insertLineAfter\"] = function(cm) { return insertLine(cm, false); };\n\n  cmds[map[\"Shift-\" + ctrl + \"Enter\"] = \"insertLineBefore\"] = function(cm) { return insertLine(cm, true); };\n\n  function wordAt(cm, pos) {\n    var start = pos.ch, end = start, line = cm.getLine(pos.line);\n    while (start && CodeMirror.isWordChar(line.charAt(start - 1))) --start;\n    while (end < line.length && CodeMirror.isWordChar(line.charAt(end))) ++end;\n    return {from: Pos(pos.line, start), to: Pos(pos.line, end), word: line.slice(start, end)};\n  }\n\n  cmds[map[ctrl + \"D\"] = \"selectNextOccurrence\"] = function(cm) {\n    var from = cm.getCursor(\"from\"), to = cm.getCursor(\"to\");\n    var fullWord = cm.state.sublimeFindFullWord == cm.doc.sel;\n    if (CodeMirror.cmpPos(from, to) == 0) {\n      var word = wordAt(cm, from);\n      if (!word.word) return;\n      cm.setSelection(word.from, word.to);\n      fullWord = true;\n    } else {\n      var text = cm.getRange(from, to);\n      var query = fullWord ? new RegExp(\"\\\\b\" + text + \"\\\\b\") : text;\n      var cur = cm.getSearchCursor(query, to);\n      var found = cur.findNext();\n      if (!found) {\n        cur = cm.getSearchCursor(query, Pos(cm.firstLine(), 0));\n        found = cur.findNext();\n      }\n      if (!found || isSelectedRange(cm.listSelections(), cur.from(), cur.to()))\n        return CodeMirror.Pass\n      cm.addSelection(cur.from(), cur.to());\n    }\n    if (fullWord)\n      cm.state.sublimeFindFullWord = cm.doc.sel;\n  };\n\n  function isSelectedRange(ranges, from, to) {\n    for (var i = 0; i < ranges.length; i++)\n      if (ranges[i].from() == from && ranges[i].to() == to) return true\n    return false\n  }\n\n  var mirror = \"(){}[]\";\n  function selectBetweenBrackets(cm) {\n    var ranges = cm.listSelections(), newRanges = []\n    for (var i = 0; i < ranges.length; i++) {\n      var range = ranges[i], pos = range.head, opening = cm.scanForBracket(pos, -1);\n      if (!opening) return false;\n      for (;;) {\n        var closing = cm.scanForBracket(pos, 1);\n        if (!closing) return false;\n        if (closing.ch == mirror.charAt(mirror.indexOf(opening.ch) + 1)) {\n          newRanges.push({anchor: Pos(opening.pos.line, opening.pos.ch + 1),\n                          head: closing.pos});\n          break;\n        }\n        pos = Pos(closing.pos.line, closing.pos.ch + 1);\n      }\n    }\n    cm.setSelections(newRanges);\n    return true;\n  }\n\n  cmds[map[\"Shift-\" + ctrl + \"Space\"] = \"selectScope\"] = function(cm) {\n    selectBetweenBrackets(cm) || cm.execCommand(\"selectAll\");\n  };\n  cmds[map[\"Shift-\" + ctrl + \"M\"] = \"selectBetweenBrackets\"] = function(cm) {\n    if (!selectBetweenBrackets(cm)) return CodeMirror.Pass;\n  };\n\n  cmds[map[ctrl + \"M\"] = \"goToBracket\"] = function(cm) {\n    cm.extendSelectionsBy(function(range) {\n      var next = cm.scanForBracket(range.head, 1);\n      if (next && CodeMirror.cmpPos(next.pos, range.head) != 0) return next.pos;\n      var prev = cm.scanForBracket(range.head, -1);\n      return prev && Pos(prev.pos.line, prev.pos.ch + 1) || range.head;\n    });\n  };\n\n  var swapLineCombo = mac ? \"Cmd-Ctrl-\" : \"Shift-Ctrl-\";\n\n  cmds[map[swapLineCombo + \"Up\"] = \"swapLineUp\"] = function(cm) {\n    if (cm.isReadOnly()) return CodeMirror.Pass\n    var ranges = cm.listSelections(), linesToMove = [], at = cm.firstLine() - 1, newSels = [];\n    for (var i = 0; i < ranges.length; i++) {\n      var range = ranges[i], from = range.from().line - 1, to = range.to().line;\n      newSels.push({anchor: Pos(range.anchor.line - 1, range.anchor.ch),\n                    head: Pos(range.head.line - 1, range.head.ch)});\n      if (range.to().ch == 0 && !range.empty()) --to;\n      if (from > at) linesToMove.push(from, to);\n      else if (linesToMove.length) linesToMove[linesToMove.length - 1] = to;\n      at = to;\n    }\n    cm.operation(function() {\n      for (var i = 0; i < linesToMove.length; i += 2) {\n        var from = linesToMove[i], to = linesToMove[i + 1];\n        var line = cm.getLine(from);\n        cm.replaceRange(\"\", Pos(from, 0), Pos(from + 1, 0), \"+swapLine\");\n        if (to > cm.lastLine())\n          cm.replaceRange(\"\\n\" + line, Pos(cm.lastLine()), null, \"+swapLine\");\n        else\n          cm.replaceRange(line + \"\\n\", Pos(to, 0), null, \"+swapLine\");\n      }\n      cm.setSelections(newSels);\n      cm.scrollIntoView();\n    });\n  };\n\n  cmds[map[swapLineCombo + \"Down\"] = \"swapLineDown\"] = function(cm) {\n    if (cm.isReadOnly()) return CodeMirror.Pass\n    var ranges = cm.listSelections(), linesToMove = [], at = cm.lastLine() + 1;\n    for (var i = ranges.length - 1; i >= 0; i--) {\n      var range = ranges[i], from = range.to().line + 1, to = range.from().line;\n      if (range.to().ch == 0 && !range.empty()) from--;\n      if (from < at) linesToMove.push(from, to);\n      else if (linesToMove.length) linesToMove[linesToMove.length - 1] = to;\n      at = to;\n    }\n    cm.operation(function() {\n      for (var i = linesToMove.length - 2; i >= 0; i -= 2) {\n        var from = linesToMove[i], to = linesToMove[i + 1];\n        var line = cm.getLine(from);\n        if (from == cm.lastLine())\n          cm.replaceRange(\"\", Pos(from - 1), Pos(from), \"+swapLine\");\n        else\n          cm.replaceRange(\"\", Pos(from, 0), Pos(from + 1, 0), \"+swapLine\");\n        cm.replaceRange(line + \"\\n\", Pos(to, 0), null, \"+swapLine\");\n      }\n      cm.scrollIntoView();\n    });\n  };\n\n  cmds[map[ctrl + \"/\"] = \"toggleCommentIndented\"] = function(cm) {\n    cm.toggleComment({ indent: true });\n  }\n\n  cmds[map[ctrl + \"J\"] = \"joinLines\"] = function(cm) {\n    var ranges = cm.listSelections(), joined = [];\n    for (var i = 0; i < ranges.length; i++) {\n      var range = ranges[i], from = range.from();\n      var start = from.line, end = range.to().line;\n      while (i < ranges.length - 1 && ranges[i + 1].from().line == end)\n        end = ranges[++i].to().line;\n      joined.push({start: start, end: end, anchor: !range.empty() && from});\n    }\n    cm.operation(function() {\n      var offset = 0, ranges = [];\n      for (var i = 0; i < joined.length; i++) {\n        var obj = joined[i];\n        var anchor = obj.anchor && Pos(obj.anchor.line - offset, obj.anchor.ch), head;\n        for (var line = obj.start; line <= obj.end; line++) {\n          var actual = line - offset;\n          if (line == obj.end) head = Pos(actual, cm.getLine(actual).length + 1);\n          if (actual < cm.lastLine()) {\n            cm.replaceRange(\" \", Pos(actual), Pos(actual + 1, /^\\s*/.exec(cm.getLine(actual + 1))[0].length));\n            ++offset;\n          }\n        }\n        ranges.push({anchor: anchor || head, head: head});\n      }\n      cm.setSelections(ranges, 0);\n    });\n  };\n\n  cmds[map[\"Shift-\" + ctrl + \"D\"] = \"duplicateLine\"] = function(cm) {\n    cm.operation(function() {\n      var rangeCount = cm.listSelections().length;\n      for (var i = 0; i < rangeCount; i++) {\n        var range = cm.listSelections()[i];\n        if (range.empty())\n          cm.replaceRange(cm.getLine(range.head.line) + \"\\n\", Pos(range.head.line, 0));\n        else\n          cm.replaceRange(cm.getRange(range.from(), range.to()), range.from());\n      }\n      cm.scrollIntoView();\n    });\n  };\n\n  if (!mac) map[ctrl + \"T\"] = \"transposeChars\";\n\n  function sortLines(cm, caseSensitive) {\n    if (cm.isReadOnly()) return CodeMirror.Pass\n    var ranges = cm.listSelections(), toSort = [], selected;\n    for (var i = 0; i < ranges.length; i++) {\n      var range = ranges[i];\n      if (range.empty()) continue;\n      var from = range.from().line, to = range.to().line;\n      while (i < ranges.length - 1 && ranges[i + 1].from().line == to)\n        to = ranges[++i].to().line;\n      if (!ranges[i].to().ch) to--;\n      toSort.push(from, to);\n    }\n    if (toSort.length) selected = true;\n    else toSort.push(cm.firstLine(), cm.lastLine());\n\n    cm.operation(function() {\n      var ranges = [];\n      for (var i = 0; i < toSort.length; i += 2) {\n        var from = toSort[i], to = toSort[i + 1];\n        var start = Pos(from, 0), end = Pos(to);\n        var lines = cm.getRange(start, end, false);\n        if (caseSensitive)\n          lines.sort();\n        else\n          lines.sort(function(a, b) {\n            var au = a.toUpperCase(), bu = b.toUpperCase();\n            if (au != bu) { a = au; b = bu; }\n            return a < b ? -1 : a == b ? 0 : 1;\n          });\n        cm.replaceRange(lines, start, end);\n        if (selected) ranges.push({anchor: start, head: Pos(to + 1, 0)});\n      }\n      if (selected) cm.setSelections(ranges, 0);\n    });\n  }\n\n  cmds[map[\"F9\"] = \"sortLines\"] = function(cm) { sortLines(cm, true); };\n  cmds[map[ctrl + \"F9\"] = \"sortLinesInsensitive\"] = function(cm) { sortLines(cm, false); };\n\n  cmds[map[\"F2\"] = \"nextBookmark\"] = function(cm) {\n    var marks = cm.state.sublimeBookmarks;\n    if (marks) while (marks.length) {\n      var current = marks.shift();\n      var found = current.find();\n      if (found) {\n        marks.push(current);\n        return cm.setSelection(found.from, found.to);\n      }\n    }\n  };\n\n  cmds[map[\"Shift-F2\"] = \"prevBookmark\"] = function(cm) {\n    var marks = cm.state.sublimeBookmarks;\n    if (marks) while (marks.length) {\n      marks.unshift(marks.pop());\n      var found = marks[marks.length - 1].find();\n      if (!found)\n        marks.pop();\n      else\n        return cm.setSelection(found.from, found.to);\n    }\n  };\n\n  cmds[map[ctrl + \"F2\"] = \"toggleBookmark\"] = function(cm) {\n    var ranges = cm.listSelections();\n    var marks = cm.state.sublimeBookmarks || (cm.state.sublimeBookmarks = []);\n    for (var i = 0; i < ranges.length; i++) {\n      var from = ranges[i].from(), to = ranges[i].to();\n      var found = cm.findMarks(from, to);\n      for (var j = 0; j < found.length; j++) {\n        if (found[j].sublimeBookmark) {\n          found[j].clear();\n          for (var k = 0; k < marks.length; k++)\n            if (marks[k] == found[j])\n              marks.splice(k--, 1);\n          break;\n        }\n      }\n      if (j == found.length)\n        marks.push(cm.markText(from, to, {sublimeBookmark: true, clearWhenEmpty: false}));\n    }\n  };\n\n  cmds[map[\"Shift-\" + ctrl + \"F2\"] = \"clearBookmarks\"] = function(cm) {\n    var marks = cm.state.sublimeBookmarks;\n    if (marks) for (var i = 0; i < marks.length; i++) marks[i].clear();\n    marks.length = 0;\n  };\n\n  cmds[map[\"Alt-F2\"] = \"selectBookmarks\"] = function(cm) {\n    var marks = cm.state.sublimeBookmarks, ranges = [];\n    if (marks) for (var i = 0; i < marks.length; i++) {\n      var found = marks[i].find();\n      if (!found)\n        marks.splice(i--, 0);\n      else\n        ranges.push({anchor: found.from, head: found.to});\n    }\n    if (ranges.length)\n      cm.setSelections(ranges, 0);\n  };\n\n  map[\"Alt-Q\"] = \"wrapLines\";\n\n  var cK = ctrl + \"K \";\n\n  function modifyWordOrSelection(cm, mod) {\n    cm.operation(function() {\n      var ranges = cm.listSelections(), indices = [], replacements = [];\n      for (var i = 0; i < ranges.length; i++) {\n        var range = ranges[i];\n        if (range.empty()) { indices.push(i); replacements.push(\"\"); }\n        else replacements.push(mod(cm.getRange(range.from(), range.to())));\n      }\n      cm.replaceSelections(replacements, \"around\", \"case\");\n      for (var i = indices.length - 1, at; i >= 0; i--) {\n        var range = ranges[indices[i]];\n        if (at && CodeMirror.cmpPos(range.head, at) > 0) continue;\n        var word = wordAt(cm, range.head);\n        at = word.from;\n        cm.replaceRange(mod(word.word), word.from, word.to);\n      }\n    });\n  }\n\n  map[cK + ctrl + \"Backspace\"] = \"delLineLeft\";\n\n  cmds[map[\"Backspace\"] = \"smartBackspace\"] = function(cm) {\n    if (cm.somethingSelected()) return CodeMirror.Pass;\n\n    cm.operation(function() {\n      var cursors = cm.listSelections();\n      var indentUnit = cm.getOption(\"indentUnit\");\n\n      for (var i = cursors.length - 1; i >= 0; i--) {\n        var cursor = cursors[i].head;\n        var toStartOfLine = cm.getRange({line: cursor.line, ch: 0}, cursor);\n        var column = CodeMirror.countColumn(toStartOfLine, null, cm.getOption(\"tabSize\"));\n\n        // Delete by one character by default\n        var deletePos = cm.findPosH(cursor, -1, \"char\", false);\n\n        if (toStartOfLine && !/\\S/.test(toStartOfLine) && column % indentUnit == 0) {\n          var prevIndent = new Pos(cursor.line,\n            CodeMirror.findColumn(toStartOfLine, column - indentUnit, indentUnit));\n\n          // Smart delete only if we found a valid prevIndent location\n          if (prevIndent.ch != cursor.ch) deletePos = prevIndent;\n        }\n\n        cm.replaceRange(\"\", deletePos, cursor, \"+delete\");\n      }\n    });\n  };\n\n  cmds[map[cK + ctrl + \"K\"] = \"delLineRight\"] = function(cm) {\n    cm.operation(function() {\n      var ranges = cm.listSelections();\n      for (var i = ranges.length - 1; i >= 0; i--)\n        cm.replaceRange(\"\", ranges[i].anchor, Pos(ranges[i].to().line), \"+delete\");\n      cm.scrollIntoView();\n    });\n  };\n\n  cmds[map[cK + ctrl + \"U\"] = \"upcaseAtCursor\"] = function(cm) {\n    modifyWordOrSelection(cm, function(str) { return str.toUpperCase(); });\n  };\n  cmds[map[cK + ctrl + \"L\"] = \"downcaseAtCursor\"] = function(cm) {\n    modifyWordOrSelection(cm, function(str) { return str.toLowerCase(); });\n  };\n\n  cmds[map[cK + ctrl + \"Space\"] = \"setSublimeMark\"] = function(cm) {\n    if (cm.state.sublimeMark) cm.state.sublimeMark.clear();\n    cm.state.sublimeMark = cm.setBookmark(cm.getCursor());\n  };\n  cmds[map[cK + ctrl + \"A\"] = \"selectToSublimeMark\"] = function(cm) {\n    var found = cm.state.sublimeMark && cm.state.sublimeMark.find();\n    if (found) cm.setSelection(cm.getCursor(), found);\n  };\n  cmds[map[cK + ctrl + \"W\"] = \"deleteToSublimeMark\"] = function(cm) {\n    var found = cm.state.sublimeMark && cm.state.sublimeMark.find();\n    if (found) {\n      var from = cm.getCursor(), to = found;\n      if (CodeMirror.cmpPos(from, to) > 0) { var tmp = to; to = from; from = tmp; }\n      cm.state.sublimeKilled = cm.getRange(from, to);\n      cm.replaceRange(\"\", from, to);\n    }\n  };\n  cmds[map[cK + ctrl + \"X\"] = \"swapWithSublimeMark\"] = function(cm) {\n    var found = cm.state.sublimeMark && cm.state.sublimeMark.find();\n    if (found) {\n      cm.state.sublimeMark.clear();\n      cm.state.sublimeMark = cm.setBookmark(cm.getCursor());\n      cm.setCursor(found);\n    }\n  };\n  cmds[map[cK + ctrl + \"Y\"] = \"sublimeYank\"] = function(cm) {\n    if (cm.state.sublimeKilled != null)\n      cm.replaceSelection(cm.state.sublimeKilled, null, \"paste\");\n  };\n\n  map[cK + ctrl + \"G\"] = \"clearBookmarks\";\n  cmds[map[cK + ctrl + \"C\"] = \"showInCenter\"] = function(cm) {\n    var pos = cm.cursorCoords(null, \"local\");\n    cm.scrollTo(null, (pos.top + pos.bottom) / 2 - cm.getScrollInfo().clientHeight / 2);\n  };\n\n  var selectLinesCombo = mac ? \"Ctrl-Shift-\" : \"Ctrl-Alt-\";\n  cmds[map[selectLinesCombo + \"Up\"] = \"selectLinesUpward\"] = function(cm) {\n    cm.operation(function() {\n      var ranges = cm.listSelections();\n      for (var i = 0; i < ranges.length; i++) {\n        var range = ranges[i];\n        if (range.head.line > cm.firstLine())\n          cm.addSelection(Pos(range.head.line - 1, range.head.ch));\n      }\n    });\n  };\n  cmds[map[selectLinesCombo + \"Down\"] = \"selectLinesDownward\"] = function(cm) {\n    cm.operation(function() {\n      var ranges = cm.listSelections();\n      for (var i = 0; i < ranges.length; i++) {\n        var range = ranges[i];\n        if (range.head.line < cm.lastLine())\n          cm.addSelection(Pos(range.head.line + 1, range.head.ch));\n      }\n    });\n  };\n\n  function getTarget(cm) {\n    var from = cm.getCursor(\"from\"), to = cm.getCursor(\"to\");\n    if (CodeMirror.cmpPos(from, to) == 0) {\n      var word = wordAt(cm, from);\n      if (!word.word) return;\n      from = word.from;\n      to = word.to;\n    }\n    return {from: from, to: to, query: cm.getRange(from, to), word: word};\n  }\n\n  function findAndGoTo(cm, forward) {\n    var target = getTarget(cm);\n    if (!target) return;\n    var query = target.query;\n    var cur = cm.getSearchCursor(query, forward ? target.to : target.from);\n\n    if (forward ? cur.findNext() : cur.findPrevious()) {\n      cm.setSelection(cur.from(), cur.to());\n    } else {\n      cur = cm.getSearchCursor(query, forward ? Pos(cm.firstLine(), 0)\n                                              : cm.clipPos(Pos(cm.lastLine())));\n      if (forward ? cur.findNext() : cur.findPrevious())\n        cm.setSelection(cur.from(), cur.to());\n      else if (target.word)\n        cm.setSelection(target.from, target.to);\n    }\n  };\n  cmds[map[ctrl + \"F3\"] = \"findUnder\"] = function(cm) { findAndGoTo(cm, true); };\n  cmds[map[\"Shift-\" + ctrl + \"F3\"] = \"findUnderPrevious\"] = function(cm) { findAndGoTo(cm,false); };\n  cmds[map[\"Alt-F3\"] = \"findAllUnder\"] = function(cm) {\n    var target = getTarget(cm);\n    if (!target) return;\n    var cur = cm.getSearchCursor(target.query);\n    var matches = [];\n    var primaryIndex = -1;\n    while (cur.findNext()) {\n      matches.push({anchor: cur.from(), head: cur.to()});\n      if (cur.from().line <= target.from.line && cur.from().ch <= target.from.ch)\n        primaryIndex++;\n    }\n    cm.setSelections(matches, primaryIndex);\n  };\n\n  map[\"Shift-\" + ctrl + \"[\"] = \"fold\";\n  map[\"Shift-\" + ctrl + \"]\"] = \"unfold\";\n  map[cK + ctrl + \"0\"] = map[cK + ctrl + \"J\"] = \"unfoldAll\";\n\n  map[ctrl + \"I\"] = \"findIncremental\";\n  map[\"Shift-\" + ctrl + \"I\"] = \"findIncrementalReverse\";\n  map[ctrl + \"H\"] = \"replace\";\n  map[\"F3\"] = \"findNext\";\n  map[\"Shift-F3\"] = \"findPrev\";\n\n  CodeMirror.normalizeKeyMap(map);\n});\n"]}